const join = require("path").join;
const fs = require("fs");

const BASE_PATH = join(__dirname, "..", "..", "packages");
const OUTPUT_FILE = join(__dirname, "..", "src", "constants", "versions.js");

function getPackagesFromDir(dir) {
  return fs.readdirSync(dir).reduce((acc, name) => {
    const path = join(dir, name);

    if (!fs.lstatSync(path).isDirectory(1)) {
      return acc;
    } else if (isPackage(path)) {
      const pkg = require(join(path, "package.json"));
      acc[packageName(pkg)] = pkg.version;
    } else {
      Object.assign(acc, getPackagesFromDir(path));
    }
    return acc;
  }, {});
}

function isPackage(dir) {
  return fs.existsSync(join(dir, "package.json"));
}

function packageName(pkg) {
  return pkg.name.slice(6);
}

function updatePackageVersions() {
  const mappedVersions = getPackagesFromDir(BASE_PATH);
  fs.writeFile(
    OUTPUT_FILE,
    `// this file is automatically generated using scripts/updatePackageVersions.js
export default ${JSON.stringify(mappedVersions, null, 2)};\n`,
    function(err) {
      if (err) {
        console.error(err);
      }
    }
  );
}

updatePackageVersions();
