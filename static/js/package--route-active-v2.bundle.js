(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{98:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),l=a(19),o={title:"Arguments",hash:"arguments"},c={title:"active()",hash:"active",children:[o]};function i(){return r.a.createElement(l.e,{meta:c},r.a.createElement("p",null,"A function to create the active route interaction. When you create your router, the result is passed to the router using the `route` option, which will add an ",r.a.createElement(l.f,null,"active()")," function to the router's route interactions."),r.a.createElement("p",null,"The interaction returns a boolean: ",r.a.createElement(l.f,null,"true"),' when a route is "active" (it matches the response\'s ',r.a.createElement(l.f,null,"location"),") and"," ",r.a.createElement(l.f,null,"false")," when it does not."),r.a.createElement(l.d,null,"import { curi } from '@curi/router';\nimport active from '@curi/route-active';\n\nconst router = curi(history, routes, {\n  route: [active()]\n});\n\nconst { response } = router.current();\n\nconst isActive = router.route.active(\n  'Some Route',\n  response\n);"),r.a.createElement(l.e,{meta:o,tag:"h3"},r.a.createElement(l.e,{meta:{title:"name",hash:"name"},tag:"h4"},r.a.createElement("p",null,"The name of the route to check if it is active.")),r.a.createElement(l.e,{meta:{title:"response",hash:"response"},tag:"h4"},r.a.createElement("p",null,"The response to check the route against.")),r.a.createElement(l.e,{meta:{title:"optional",hash:"optional"},tag:"h4"},r.a.createElement("p",null,"An optional argument with additional properties can be passed as the third argument."),r.a.createElement(l.d,null,"const isActive = router.route.active(\n  'Some Route',\n  response,\n  {\n    params: { id: 1 },\n    partial: false,\n    locationCheck: location => location.hash === \"comments\"\n  }\n);"),r.a.createElement(l.e,{meta:{title:"params",hash:"params"},tag:"h5"},r.a.createElement("p",null,"Any route params for the route that is being checked.")),r.a.createElement(l.e,{meta:{title:"partial",hash:"partial"},tag:"h5"},r.a.createElement("p",null,"When ",r.a.createElement(l.f,null,"true"),", ancestor routes can be considered active. (default ",r.a.createElement(l.f,null,"false"),").")),r.a.createElement(l.e,{meta:{title:"locationCheck",hash:"locationCheck"},tag:"h5"},r.a.createElement("p",null,"A function that receives a location object and returns a boolean."),r.a.createElement("p",null,"Route matching determines if the ",r.a.createElement(l.f,null,"pathname")," for the current response's location matches the provided route. If you want to compare other location parts (",r.a.createElement(l.f,null,"hash")," or"," ",r.a.createElement(l.f,null,"query"),"), you can use the ",r.a.createElement(l.f,null,"locationCheck")," argument."),r.a.createElement("p",null,"This function will only be called when the route matches.")))))}var u=r.a.memo(function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(l.b,null,r.a.createElement("p",null,"The ",r.a.createElement(l.f,null,"@curi/route-active"),' package determines whether a route is "active" by comparing it to the current response. This can be restricted to complete matches or allow partial matches so that locations that represent an ancestor of the current location are also considered "active".')),r.a.createElement(l.a,null,r.a.createElement(i,null)))}),s=[{title:"Installation",hash:"installation"},{title:"About",hash:"about"},{title:"API",hash:"API",children:[c]}];a.d(t,"component",function(){return u}),a.d(t,"contents",function(){return s})}}]);