(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{86:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),l=a(3),o=a(19),i={title:"Arguments",hash:"curiProvider-arguments"},c={title:"curiProvider()",hash:"curiProvider",children:[i,{title:"Router",hash:"curiProvider-Router"}]};function s(){return r.a.createElement(o.e,{meta:c},r.a.createElement("p",null,"A higher-order component that returns a ",r.a.createElement(o.f,null,"Router")," component."),r.a.createElement(o.d,{lang:"jsx"},"import { curiProvider } from '@curi/react-dom';\n\nconst router = curi(history, routes);\nconst Router = curiProvider(router);\n\nReactDOM.render((\n  <Router>\n    <App />\n  </Router>\n), node);"),r.a.createElement(o.g,null,r.a.createElement("p",null,"Why a higher-order component not regular component? Props signify values that can change, but an application should only ever have one router. Using a higher-order component hard-codes the provided"," ",r.a.createElement(o.f,null,"router")," as the one and only router.")),r.a.createElement(o.e,{tag:"h3",meta:i},r.a.createElement(o.e,{tag:"h4",meta:{title:"router",hash:"curiProvider-router"}},r.a.createElement("p",null,"A Curi"," ",r.a.createElement(l.a,{name:"Package",params:{package:"router",version:"v1"},hash:"curi"},"router"),"."))),r.a.createElement(o.e,{tag:"h3",meta:{title:"Router",hash:"curiProvider-Router"}},r.a.createElement("p",null,"The ",r.a.createElement(o.c,null,"Router")," sets routing context data. Any component that relies on routing data must be a descendant of the ",r.a.createElement(o.c,null,"Router"),"."),r.a.createElement(o.e,{tag:"h4",meta:{title:"children",hash:"curiProvider-render"}},r.a.createElement("p",null,"The ",r.a.createElement(o.c,null,"Router")," takes any valid React node (elements, strings, etc.) as its ",r.a.createElement(o.f,null,"children"),"."))))}var u={title:"Props",hash:"Link-props"},m={title:"<Link>",hash:"Link",children:[u]};function h(){return r.a.createElement(o.e,{meta:m},r.a.createElement("p",null,"A ",r.a.createElement(o.c,null,"Link")," is for navigating within your application using an anchor element (",r.a.createElement(o.c,null,"a"),"). When the rendered element is clicked, instead of reloading the page it will use your router object's history object to navigate."),r.a.createElement("p",null,"With the ",r.a.createElement(o.c,null,"Link"),", instead of providing a URI to navigate to, you specify the name of the route that you want to link to. Then, the pathname of the URI you want the component to link to will be automatically generated for you."),r.a.createElement(o.d,{lang:"jsx"},"import { Link } from '@curi/react-dom';\n\n<Link name='User' params={{ id: 16 }}>User 16</Link>\n// <a href='/user/16'>User 16</a>"),r.a.createElement(o.e,{tag:"h3",meta:u},r.a.createElement(o.e,{tag:"h4",meta:{title:"name",hash:"Link-name"}},r.a.createElement("p",null,"The name of the route that you want to navigate to."),r.a.createElement("p",null,"If ",r.a.createElement(o.f,null,"name")," is not provided, the ",r.a.createElement(o.c,null,"Link")," will re-use the current location's ",r.a.createElement(o.f,null,"pathname"),". This is useful for linking to hashes within the current page."),r.a.createElement(o.d,{lang:"jsx"},'// Home route is { name: "Home", path: "" }\n<Link name="Home">Home</Link>')),r.a.createElement(o.e,{tag:"h4",meta:{title:"params",hash:"Link-params"}},r.a.createElement("p",null,"If the route that you want to navigate to (or any of its parents) include path parameters, you can specify them using the params prop."),r.a.createElement(o.d,{lang:"jsx"},"// User route is { name: 'User', path: '/user/:id' }\n<Link name='User' params={{ id: 16 }}>User 16</Link>")),r.a.createElement(o.e,{tag:"h4",meta:{title:"hash, query & state",hash:"Link-hash-query-state"}},r.a.createElement("p",null,"While the pathname of the location to navigate to will be generated for you, this does not cover over location properties (query, hash, and state). The ",r.a.createElement(o.f,null,"query"),", ",r.a.createElement(o.f,null,"hash"),", and"," ",r.a.createElement(o.f,null,"state")," props are used to pass these values."),r.a.createElement(o.d,{lang:"jsx"},'<Link\n  name=\'Products\'\n  params={{ type: \'vacuums\' }}\n  hash="iroomba"\n  query="volume=loud"\n  state={{ owner: "Tom Haverford" }}\n>\n  DJ Roomba\n</Link>\n\n// <a href="products/vacuums?volume=loud#iroomba">\n//  DJ Roomba\n// </a>')),r.a.createElement(o.e,{tag:"h4",meta:{title:"children",hash:"Link-children"}},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"children")," prop can take two forms: either a valid React Node (e.g. a React element, a string, or ",r.a.createElement(o.f,null,"null"),") or a render-invoked ",r.a.createElement(o.f,null,"children")," function."),r.a.createElement("p",null,"The render-invoked ",r.a.createElement(o.f,null,"children")," function will be called with the ",r.a.createElement(o.c,null,"Link"),"'s navigation state. The navigation state is"," ",r.a.createElement(o.f,null,"false")," to start, ",r.a.createElement(o.f,null,"true")," when the ",r.a.createElement(o.c,null,"Link")," ","is clicked, and ",r.a.createElement(o.f,null,"false")," when the the navigation finishes/is cancelled."),r.a.createElement(o.d,{lang:"jsx"},'// a React node\n<Link name="Home">\n  Home\n</Link>\n\n// a render-invoked function\n<Link name="User" params={{ id: 1 }}>\n  {navigating => (\n    <React.Fragment>\n      User 1\n      {navigating ? <Spinner /> : null}\n    </React.Fragment>\n  )}\n</Link>')),r.a.createElement(o.e,{tag:"h4",meta:{title:"anchor",hash:"Link-anchor"}},r.a.createElement("p",null,"By default, when you render a ",r.a.createElement(o.c,null,"Link"),", an anchor element will be rendered. ",r.a.createElement(o.f,null,"anchor")," lets you provide your own component to be rendered instead. This can be useful for using styled components to navigate."),r.a.createElement(o.j,null,r.a.createElement("p",null,"You can provide any component that you want, but you"," ",r.a.createElement("em",null,"should")," stick with an anchor (or a component that renders an anchor). There are accessibility issues that will occur when you use other DOM elements as links. The component's prop type is func in an attempt to discourage you from making your link render a button, div, span, etc."))),r.a.createElement(o.e,{tag:"h4",meta:{title:"forward",hash:"Link-forward"}},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"forward")," prop is an object of props to pass on to the rendered anchor component."),r.a.createElement(o.d,{lang:"jsx"},'<Link\n  name="Home"\n  forward={{\n    className: "home"\n  }}\n>Home</Link>\n// <a href="/" class="home">Home</a>'),r.a.createElement(o.g,null,r.a.createElement("p",null,"Previously, any extra props passed to a ",r.a.createElement(o.c,null,"Link")," would be forwarded to the anchor component. This behavior is now deprecated and will be removed in ",r.a.createElement(o.f,null,"@curi/react-native")," v2. Please use the ",r.a.createElement(o.f,null,"forward")," prop instead.")))))}var p={title:"useCuri()",hash:"useCuri"};function f(){return r.a.createElement(o.e,{meta:p},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"useCuri")," hook reads the current ",r.a.createElement(o.f,null,"response"),","," ",r.a.createElement(o.f,null,"navigation"),", and ",r.a.createElement(o.f,null,"router")," values from React's context."),r.a.createElement(o.d,{lang:"jsx"},"import { useCuri } from '@curi/react-dom';\n\nfunction App() {\n  const {\n    response,\n    navigation,\n    router\n  } = useCuri();\n  return (\n    <ThingThatNeedsResponse\n      response={response}\n    />\n  );\n}"))}var d={title:"Options",hash:"useActive-opts"},E={title:"useActive()",hash:"useActive",children:[d]};function g(){return r.a.createElement(o.e,{meta:E},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"useActive")," hook determines if a route is active by comparing a route name (and possibly params) to a ",r.a.createElement(o.f,null,"response")," ","object."),r.a.createElement(o.d,{lang:"jsx"},'import { useActive, Link } from \'@curi/react-dom\';\n\nfunction ActiveLink({\n  name,\n  params,\n  partial,\n  children\n}) {\n  const active = useActive({ name, params, partial });\n  return (\n    <Link\n      name={name}\n      params={params}\n      forward={{ className: active ? "active" : "" }}\n    >\n      {children}\n    </Link>\n  );\n}\n\n<ActiveLink name="Home">Home</ActiveLink>'),r.a.createElement(o.g,null,r.a.createElement("p",null,r.a.createElement(o.f,null,"useActive")," relies on the active route interaction from"," ",r.a.createElement(l.a,{name:"Package",params:{package:"route-active",version:"v1"}},"@curi/route-active")," ","being added to your router."),r.a.createElement(o.d,null,"import active from '@curi/route-active';\n\nconst router = curi(history, routes, {\n  route: [active()]\n});")),r.a.createElement(o.e,{tag:"h3",meta:d},r.a.createElement("p",null,r.a.createElement(o.f,null,"useActive")," takes a single argument, an options object."),r.a.createElement(o.e,{tag:"h4",meta:{title:"name",hash:"useActive-name"}},r.a.createElement("p",null,"The name of the route to compare against the response object.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"params",hash:"useActive-params"}},r.a.createElement("p",null,"An object containing route parameters. These will be compared against the route params of the response object.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"partial",hash:"useActive-partial"}},r.a.createElement("p",null,"Allows ancestor routes to be considered active when true. Defaults to false."),r.a.createElement(o.d,{lang:"jsx"},'// response = { name: "User Album", params: { id: "abcde" }}\n// where "User Album" is a child route of "User"\n\nuseActive({ name: "User" }); // false\nuseActive({ name: "User", partial: true }); // true'))),r.a.createElement(o.e,{tag:"h4",meta:{title:"locationCheck",hash:"useActve-locationCheck"}},r.a.createElement("p",null,"The base active check only checks that the route (i.e. pathname) is active. ",r.a.createElement(o.f,null,"locationCheck")," allows you to check if other parts of the location are also active."),r.a.createElement(o.d,{lang:"jsx"},'useActive({\n  name: "Results",\n  locationCheck: loc => loc.query === "page=3"\n});\n\n// active for /results?page=3\n// not active for /results?page=1')))}var v={title:"Options",hash:"useNavigationFocus-opts"},y={title:"useNavigationFocus()",hash:"useNavigationFocus",children:[v]};function k(){return r.a.createElement(o.e,{meta:y},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"useNavigationFocus")," hook is used to focus a DOM element."),r.a.createElement(o.g,null,r.a.createElement("p",null,'The DOM component that gets the ref should either already be "focusable", like an ',r.a.createElement(o.c,null,"input"),", or be given a"," ",r.a.createElement(o.f,null,"tabIndex")," prop (usually with the value of ",r.a.createElement(o.f,null,"-1"),"). If neither of these conditions is met, then the document's"," ",r.a.createElement(o.c,null,"body")," will be focused.")),r.a.createElement(o.d,{lang:"jsx"},'import { useNavigationFocus } from "@curi/react-dom";\n\nfunction App() {\n  const ref = React.createRef(null);\n  useNavigationFocus(ref);\n\n  return (\n    <div tabIndex={-1} ref={ref}>\n      {/* ... */}\n    </div>\n  );\n}'),r.a.createElement("p",null,"The focused element will have an outline (the exact style varies by browser). You can remove this with CSS by setting ",r.a.createElement(o.f,null,"outline")," to"," ",r.a.createElement(o.f,null,'"none"'),"."),r.a.createElement(o.d,{lang:"jsx"},'<div\n  ref={ref}\n  tabIndex={-1}\n  style={{ outline: "none" }}\n>\n  {/* ... */}\n</div>'),r.a.createElement(o.e,{tag:"h3",meta:v},r.a.createElement(o.e,{tag:"h4",meta:{title:"preventScroll",hash:"useNavigationFocus-preventScroll"}},r.a.createElement("p",null,"The default behavior for focusing an element is to scroll to it. If you want to prevent this, set ",r.a.createElement(o.f,null,"preventScroll")," to"," ",r.a.createElement(o.f,null,"true"),"."),r.a.createElement(o.d,{lang:"jsx"},"// scrolls\nuseNavigationFocus(ref);\n\n// does not scroll\nuseNavigationFocus(ref, { preventScroll: true });")),r.a.createElement(o.e,{tag:"h4",meta:{title:"preserve",hash:"useNavigationFocus-preserve"}},r.a.createElement("p",null,"The default focus behavior is to always focus the element that the ref is attached to. However, if you want to preserve the focus on some other element (e.g. an autofocused element), setting the"," ",r.a.createElement(o.f,null,"preserve")," option to ",r.a.createElement(o.f,null,"true")," will stop the"," ",r.a.createElement(o.f,null,"ref")," element from claiming the focus."),r.a.createElement("p",null,"This only works when the already-focused element is a child of the"," ",r.a.createElement(o.f,null,"ref")," element. If it is not a child, then the"," ",r.a.createElement(o.f,null,"ref")," element will take the focus."),r.a.createElement(o.d,{lang:"jsx"},"// claim focus for the <div>\nuseNavigationFocus(ref)\n<div tabIndex={-1} ref={ref}>\n  <input autoFocus={true} />\n</div>\n\n// preserve focus on the <input>\nuseNavigationFocus(ref, { preserve: true });\n<div tabIndex={-1} ref={ref}>\n  <input autoFocus={true} />\n</div>"))))}var b={title:"useNavigating()",hash:"useNavigating"};function w(){return r.a.createElement(o.e,{meta:b},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"useNavigating")," hook is used to determine if the application is currently navigating. When the application is navigating, it returns a function to cancel the navigation."),r.a.createElement("p",null,"This is only useful for asynchronous routes because with synchronous routes, navigation happens immediately."),r.a.createElement(o.d,{lang:"jsx"},'import { useNavigating } from "@curi/react-dom";\n\nfunction CancelNavigation() {\n  const cancel = useNavigating();\n\n  return cancel\n    ? <button onClick={cancel}>Cancel</button>\n    : null;\n}'),r.a.createElement(o.g,null,r.a.createElement("p",null,"Ideally, browsers would natively handle asynchronous navigation and this would be unnecessary. For the time being, this is the next best solution.")))}var L={title:"Arguments",hash:"useBlock-args"},T={title:"useBlock()",hash:"useBlock",children:[L]};function A(){return r.a.createElement(o.e,{meta:T},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"useBlock")," hook lets you setup navigation blocks. Navigation away from the page will be prevented unless the user confirms that they want to navigate."),r.a.createElement("p",null,"The primary use case for ",r.a.createElement(o.f,null,"useBlock")," is to prevent accidental navigation away from a page with a a partially filled form."),r.a.createElement(o.g,null,r.a.createElement("p",null,"This ",r.a.createElement("strong",null,"will not")," prevent the user from navigating to another site, it only works for navigation within the application.")),r.a.createElement(o.d,{lang:"jsx"},"import { useBlock } from '@curi/react-dom';\n        \nuseBlock(true, confirm);"),r.a.createElement(o.e,{tag:"h3",meta:L},r.a.createElement(o.e,{tag:"h4",meta:{title:"active",hash:"useBlock-active"}},r.a.createElement("p",null,"Navigation is only blocked when active is true."),r.a.createElement(o.d,{lang:"jsx"},"// will block navigation\nuseBlock(true, confirm);\n\n// will not block navigation\nuseBlock(false, confirm);")),r.a.createElement(o.e,{tag:"h4",meta:{title:"fn",hash:"useBlock-fn"}},r.a.createElement("p",null,"A function that will be called whenever there is navigation. The function is passed three arguments: ",r.a.createElement(o.f,null,"info"),","," ",r.a.createElement(o.f,null,"confirm"),", and ",r.a.createElement(o.f,null,"prevent"),"."),r.a.createElement(o.d,{lang:"jsx"},'useBlock(true, (info, success, failure) => {\n  const response = window.confirm("Shall we?");\n  if (response) {\n    success();\n  } else {\n    failure();\n  }\n});'),r.a.createElement(o.e,{tag:"h5",meta:{title:"info",hash:"useBlock-info"}},r.a.createElement("p",null,r.a.createElement(o.f,null,"info")," is an object which contains information about the navigation. The object has three properties:"),r.a.createElement("ul",null,r.a.createElement("li",null,r.a.createElement(o.f,null,"to")," - the navigation location"),r.a.createElement("li",null,r.a.createElement(o.f,null,"from")," - the current location"),r.a.createElement("li",null,r.a.createElement(o.f,null,"action")," - the type of navigation (PUSH, REPLACE, or POP)."))),r.a.createElement(o.e,{tag:"h5",meta:{title:"confirm",hash:"useBlock-confirm"}},r.a.createElement("p",null,"A function that should be called when the user confirms that they want to navigate.")),r.a.createElement(o.e,{tag:"h5",meta:{title:"prevent",hash:"useBlock-prevent"}},r.a.createElement("p",null,"A function that should be called when the use wants to cancel the navigation.")))))}var j={title:"Options",hash:"useLocation-opts"},x={title:"useLocation()",hash:"useLocation",children:[j]};function R(){return r.a.createElement(o.e,{meta:x},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"useLocation")," hook creates a location object."),r.a.createElement(o.d,{lang:"jsx"},'import { useLocation } from \'@curi/react-dom\';\n        \nuseLocation({\n  name: "Video",\n  params: { id: "jaifeo9" } },\n  hash: "comments",\n  query: "t=15"\n});'),r.a.createElement(o.e,{tag:"h3",meta:j},r.a.createElement(o.e,{tag:"h4",meta:{title:"name",hash:"useLocation-name"}},r.a.createElement("p",null,"The name of the route to generate the location's pathname from. If this is not provided, the generated location's pathname will be an empty string (",r.a.createElement(o.f,null,'""'),");")),r.a.createElement(o.e,{tag:"h4",meta:{title:"params",hash:"useLocation-params"}},r.a.createElement("p",null,"An object of params for the named route.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"hash",hash:"useLocation-hash"}},r.a.createElement("p",null,"A hash string for the location.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"query",hash:"useLocation-query"}},r.a.createElement("p",null,"The location's query value."),r.a.createElement("p",null,"By default, this is expected to be a string, but if you configure your history object with the"," ",r.a.createElement("a",{href:"https://github.com/pshrmn/hickory/blob/master/docs/api/Browser.md#options"},r.a.createElement(o.f,null,"query"))," ","option, this may be something else.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"state",hash:"useLocation-state"}},r.a.createElement("p",null,"State data to associate with the location. This must be serializable."))))}var N={title:"Options",hash:"useHref-opts"},C={title:"useHref()",hash:"useHref",children:[N]};function H(){return r.a.createElement(o.e,{meta:C},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"useHref")," hook creates a URL string."),r.a.createElement(o.d,{lang:"jsx"},'import { useHref } from \'@curi/react-dom\';\n        \nconst href = useHref({\n  name: "Video",\n  params: { id: "jaifeo9" } },\n  hash: "comments",\n  query: "t=15"\n});\n// href = "/video/jaifeo9?t=15#comments"'),r.a.createElement(o.e,{tag:"h3",meta:N},r.a.createElement(o.e,{tag:"h4",meta:{title:"name",hash:"useHref-name"}},r.a.createElement("p",null,"The name of the route to generate the location's pathname from. If this is not provided, the generated location's pathname will be an empty string (",r.a.createElement(o.f,null,'""'),");")),r.a.createElement(o.e,{tag:"h4",meta:{title:"params",hash:"useHref-params"}},r.a.createElement("p",null,"An object of params for the named route.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"hash",hash:"useHref-hash"}},r.a.createElement("p",null,"A hash string for the location.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"query",hash:"useHref-query"}},r.a.createElement("p",null,"The location's query value."),r.a.createElement("p",null,"By default, this is expected to be a string, but if you configure your history object with the"," ",r.a.createElement("a",{href:"https://github.com/pshrmn/hickory/blob/master/docs/api/Browser.md#options"},r.a.createElement(o.f,null,"query"))," ","option, this may be something else."))))}var P={title:"Props",hash:"Curious-props"},B={title:"<Curious>",hash:"Curious",children:[P]};function F(){return r.a.createElement(o.e,{meta:B},r.a.createElement("p",null,"A context consumer component for injecting router values into components."),r.a.createElement(o.d,{lang:"jsx"},"import { Curious } from '@curi/react-dom';\n\nfunction MyComponent() {\n  return (\n    <Curious>\n      {({ router, response, navigation }) => {\n        // pass these props to any components\n        // that needs them\n        return (\n          <ThingThatNeedsResponse\n            response={response}\n          />\n        );\n      }}\n    </Curious>\n  );\n}"),r.a.createElement(o.e,{tag:"h3",meta:P},r.a.createElement(o.e,{tag:"h4",meta:{title:"children",hash:"Curious-children"}},r.a.createElement("p",null,"A render-invoked function that returns a React element. This function will receive an object with ",r.a.createElement(o.f,null,"router"),","," ",r.a.createElement(o.f,null,"response")," and ",r.a.createElement(o.f,null,"navigation")," properties."))))}var U=r.a.memo(function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(o.b,null,r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"@curi/react-dom")," package provides a number of React components that you can use for rendering your application."),r.a.createElement("p",null,"For more information on using Curi with React DOM, please check out the"," ",r.a.createElement(l.a,{name:"Guide",params:{slug:"react-dom"}},"React DOM guide"),".")),r.a.createElement(o.a,null,r.a.createElement(s,null),r.a.createElement(h,null),r.a.createElement(f,null),r.a.createElement(g,null),r.a.createElement(k,null),r.a.createElement(w,null),r.a.createElement(A,null),r.a.createElement(R,null),r.a.createElement(H,null),r.a.createElement(F,null)))}),I=[{title:"Installation",hash:"installation"},{title:"About",hash:"about"},{title:"API",hash:"API",children:[c,m,p,E,y,b,T,x,C,B]}];a.d(t,"component",function(){return U}),a.d(t,"contents",function(){return I})}}]);