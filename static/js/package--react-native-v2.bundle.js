(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{76:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),l=a(3),o=a(20),i={title:"Arguments",hash:"create_router_component-arguments"},s={title:"create_router_component",hash:"create_router_component",children:[i,{title:"Router",hash:"create_router_component-Router"}]};function c(){return r.a.createElement(o.e,{meta:s},r.a.createElement("p",null,"A higher-order component that returns a ",r.a.createElement(o.f,null,"Router")," component."),r.a.createElement(o.d,{lang:"jsx"},"import { create_router_component } from '@curi/react-native';\n\nconst router = create_router(browser, routes);\nconst Router = create_router_component(router);\n\nReactDOM.render((\n  <Router>\n    <App />\n  </Router>\n), node);"),r.a.createElement(o.g,null,r.a.createElement("p",null,"Why a higher-order component not regular component? Props signify values that can change, but an application should only ever have one router. Using a higher-order component hard-codes the provided"," ",r.a.createElement(o.f,null,"router")," as the one and only router.")),r.a.createElement(o.e,{tag:"h3",meta:i},r.a.createElement(o.e,{tag:"h4",meta:{title:"router",hash:"create_router_component-router"}},r.a.createElement("p",null,"A Curi"," ",r.a.createElement(l.a,{name:"Package",params:{package:"router",version:"v1"},hash:"curi"},"router"),"."))),r.a.createElement(o.e,{tag:"h3",meta:{title:"Router",hash:"create_router_component-Router"}},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"Router")," sets routing context data. Any component that relies on routing data must be a descendant of the ",r.a.createElement(o.f,null,"Router"),"."),r.a.createElement(o.e,{tag:"h4",meta:{title:"children",hash:"create_router_component-render"}},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"Router")," takes any valid React node (elements, strings, etc.) as its ",r.a.createElement(o.f,null,"children"),"."))))}var u={title:"Props",hash:"Link-props"},m={title:"<Link>",hash:"Link",children:[u]};function h(){return r.a.createElement(o.e,{meta:m},r.a.createElement("p",null,"A ",r.a.createElement(o.f,null,"Link")," is used for navigating within your application. By default, this will render a ",r.a.createElement(o.f,null,"TouchableHighlight"),", but you can also provide another component. When the rendered element is touched, it will use the router's ",r.a.createElement(o.f,null,"history")," object to change locations, which will trigger a re-render."),r.a.createElement("p",null,"With the ",r.a.createElement(o.f,null,"Link"),", instead of providing a URI to navigate to, you specify the name of the route that you want to link to. Then, the pathname of the URI you want the component to link to will be automatically generated for you."),r.a.createElement(o.d,{lang:"jsx"},"import { Link } from '@curi/react-native';\n  \n<Link name='User' params={{ id: 16 }}>\n  <Text>User 16</Text>\n</Link>\n// <TouchableHighlight>\n//   <Text>User 16</Text>\n// </TouchableHighlight>"),r.a.createElement(o.e,{tag:"h3",meta:u},r.a.createElement(o.e,{tag:"h4",meta:{title:"name",hash:"Link-to"}},r.a.createElement("p",null,"The name of the route that you want to navigate to."),r.a.createElement("p",null,"If ",r.a.createElement(o.f,null,"name")," is not provided, the ",r.a.createElement(o.f,null,"Link")," will re-use the current location's ",r.a.createElement(o.f,null,"pathname"),". This is useful for linking to hashes within the current page."),r.a.createElement(o.d,{lang:"jsx"},'// Home route is { name: "Home", path: "" }\n<Link name="Home">Home</Link>')),r.a.createElement(o.e,{tag:"h4",meta:{title:"params",hash:"Link-params"}},r.a.createElement("p",null,"If the route that you want to navigate to (or any of its parents) include path parameters, you can specify them using the params prop."),r.a.createElement(o.d,{lang:"jsx"},"// User route is { name: 'User', path: '/user/:id' }\n<Link name='User' params={{ id: 16 }}>User 16</Link>")),r.a.createElement(o.e,{tag:"h4",meta:{title:"hash, query & state",hash:"Link-hash-query-state"}},r.a.createElement("p",null,"While the pathname of the location to navigate to will be generated for you, this does not cover over location properties (query, hash, and state). The ",r.a.createElement(o.f,null,"query"),", ",r.a.createElement(o.f,null,"hash"),", and"," ",r.a.createElement(o.f,null,"state")," props are used to pass these values."),r.a.createElement(o.d,{lang:"jsx"},'<Link\n  name="Products"\n  params={{ type: "vacuums" }}\n  hash="iroomba"\n  query="volume=loud"\n  state={{ owner: "Tom Haverford" }}\n>\n  DJ Roomba\n</Link>')),r.a.createElement(o.e,{tag:"h4",meta:{title:"children",hash:"Link-children"}},r.a.createElement("p",null,"A valid React Node (e.g. a React element, a string, or"," ",r.a.createElement(o.f,null,"null"),")."),r.a.createElement(o.d,{lang:"jsx"},'// a React node\n<Link name="Home">\n  <Text>Home</Text>\n</Link>')),r.a.createElement(o.e,{tag:"h4",meta:{title:"anchor",hash:"Link-anchor"}},r.a.createElement("p",null,"By default, when you render a ",r.a.createElement(o.f,null,"Link"),", a"," ",r.a.createElement(o.f,null,"TouchableHighlight")," element will be rendered."," ",r.a.createElement(o.f,null,"anchor")," lets you provide your own component to be rendered instead."),r.a.createElement(o.d,{lang:"jsx"},'<Link\n  name="User"\n  params={{ id: 16 }}\n  anchor={TouchableOpacity}\n>\n<Text>User 16</Text>\n</Link>\n// <TouchableOpacity>\n//   <Text>User 16</Text>\n// </TouchableOpacity>')),r.a.createElement(o.e,{tag:"h4",meta:{title:"forward",hash:"Link-forward"}},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"forward")," prop is an object of props to pass on to the rendered anchor component."),r.a.createElement(o.d,{lang:"jsx"},'<Link\n  name="Home"\n  forward={{\n    style: {...}\n  }}\n>\n  <Text>Home</Text>\n</Link>\n// <TouchableOpacity style={{...}}>\n//   <Text>Home</Text>\n// </TouchableOpacity>'),r.a.createElement(o.g,null,r.a.createElement("p",null,"Previously, any extra props passed to a ",r.a.createElement(o.f,null,"Link")," would be forwarded to the anchor component. This behavior is now deprecated and will be removed in ",r.a.createElement(o.f,null,"@curi/react-native")," v2. Please use the ",r.a.createElement(o.f,null,"forward")," prop instead.")))))}var p={title:"Props",hash:"AsyncLink-props"},E={title:"<AsyncLink>",hash:"AsyncLink",children:[p]};function d(){return r.a.createElement(o.e,{meta:E},r.a.createElement("p",null,"An ",r.a.createElement(o.f,null,"AsyncLink")," is similar to a"," ",r.a.createElement(l.a,{hash:"Link"},r.a.createElement(o.f,null,"Link")),", but uses a render-invoked function as its ",r.a.createElement(o.f,null,"children")," ","component. The function will be called with one argument, a boolean indicating whether or not the link is actively navigating (i.e. when"," ",r.a.createElement(o.f,null,"true"),", the user has clicked the link and Curi is currently running async code for the navigation)."),r.a.createElement(o.d,{lang:"jsx"},"import { AsyncLink } from '@curi/react-dom';\n\n<AsyncLink name='User' params={{ id: 16 }}>\n  {navigating => {\n    return navigating\n      ? <Text>Navigating to User 16</Text>\n      : <Text>Go to User 16</Text>\n  }}\n</AsyncLink>\n\n<TouchableHighlight>\n  <Text>Go to User 16</Text>\n</TouchableHighlight>\n// press button\n<TouchableHighlight>\n  <Text>Navigating to User 16</Text>\n</TouchableHighlight>"),r.a.createElement(o.e,{tag:"h3",meta:p},r.a.createElement(o.e,{tag:"h4",meta:{title:"name",hash:"AsyncLink-name"}},r.a.createElement("p",null,"See ",r.a.createElement(l.a,{hash:"Link-name"},"Link name"))),r.a.createElement(o.e,{tag:"h4",meta:{title:"params",hash:"AsyncLink-params"}},r.a.createElement("p",null,"See ",r.a.createElement(l.a,{hash:"Link-params"},"Link params"))),r.a.createElement(o.e,{tag:"h4",meta:{title:"hash, query & state",hash:"AsyncLink-hash-query-state"}},r.a.createElement("p",null,"See"," ",r.a.createElement(l.a,{hash:"Link-hash-query-state"},"Link hash, query & state"))),r.a.createElement(o.e,{tag:"h4",meta:{title:"children",hash:"Link-children"}},r.a.createElement("p",null,"A render-invoked ",r.a.createElement(o.f,null,"children")," function will be called with the ",r.a.createElement(o.f,null,"AsyncLink"),"'s navigation state. The navigation state is"," ",r.a.createElement(o.f,null,"false")," to start, ",r.a.createElement(o.f,null,"true")," when the"," ",r.a.createElement(o.f,null,"AsyncLink")," is clicked, and ",r.a.createElement(o.f,null,"false")," when the the navigation finishes/is cancelled."),r.a.createElement(o.d,{lang:"jsx"},'<AsyncLink name="User" params={{ id: 1 }}>\n  {navigating => (\n    <React.Fragment>\n      <Text>User 1</Text>\n      {navigating ? <Spinner /> : null}\n    </React.Fragment>\n  )}\n</AsyncLink>')),r.a.createElement(o.e,{tag:"h4",meta:{title:"anchor",hash:"AsyncLink-anchor"}},r.a.createElement("p",null,"See ",r.a.createElement(l.a,{hash:"Link-anchor"},"Link anchor"))),r.a.createElement(o.e,{tag:"h4",meta:{title:"forward",hash:"AsyncLink-forward"}},r.a.createElement("p",null,"See ",r.a.createElement(l.a,{hash:"Link-forward"},"Link forward")))))}var g={title:"useResponse()",hash:"useResponse"};function f(){return r.a.createElement(o.e,{meta:g},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"useResponse")," hook reads the current ",r.a.createElement(o.f,null,"response"),","," ",r.a.createElement(o.f,null,"navigation"),", and ",r.a.createElement(o.f,null,"router")," values from React's context."),r.a.createElement(o.d,{lang:"jsx"},"import { useResponse } from '@curi/react-native';\n\nfunction App() {\n  const {\n    response,\n    navigation,\n    router\n  } = useResponse();\n  return (\n    <ThingThatNeedsResponse\n      response={response}\n    />\n  );\n}"))}var v={title:"useRouter()",hash:"useRouter"};function y(){return r.a.createElement(o.e,{meta:v},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"useRouter")," hook returns the ",r.a.createElement(o.f,null,"router")," object."),r.a.createElement(o.d,{lang:"jsx"},"import { useRouter } from '@curi/react-native';\n\nfunction App() {\n  const router = useRouter();\n  // ...\n}"),r.a.createElement(o.g,null,r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"router")," can also be accessed using the"," ",r.a.createElement(o.f,null,"useResponse")," hook. The difference is that"," ",r.a.createElement(o.f,null,"useResponse")," is called every time there is a new response. If a component only cares about the ",r.a.createElement(o.f,null,"router"),", the component should use ",r.a.createElement(o.f,null,"useRouter"),", which will not cause extra renders.")))}var k={title:"Options",hash:"useActive-opts"},b={title:"useActive()",hash:"useActive",children:[k]};function L(){return r.a.createElement(o.e,{meta:b},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"useActive")," hook determines if a route is active by comparing a route name (and possibly params) to a ",r.a.createElement(o.f,null,"response")," ","object."),r.a.createElement(o.d,{lang:"jsx"},'import { useActive, Link } from \'@curi/react-native\';\n\nfunction ActiveLink({\n  name,\n  params,\n  partial,\n  children\n}) {\n  const active = useActive({ name, params, partial });\n  return (\n    <Link\n      name={name}\n      params={params}\n      forward={{ className: active ? "active" : "" }}\n    >\n      {children}\n    </Link>\n  );\n}\n\n<ActiveLink name="Home">Home</ActiveLink>'),r.a.createElement(o.g,null,r.a.createElement("p",null,r.a.createElement(o.f,null,"useActive")," relies on the active route interaction from"," ",r.a.createElement(l.a,{name:"Package",params:{package:"route-active",version:"v1"}},"@curi/route-active")," ","being added to your router."),r.a.createElement(o.d,null,"import active from '@curi/route-active';\n\nconst router = create_router(browser, routes, {\n  route: [active()]\n});")),r.a.createElement(o.e,{tag:"h3",meta:k},r.a.createElement("p",null,r.a.createElement(o.f,null,"useActive")," takes a single argument, an options object."),r.a.createElement(o.e,{tag:"h4",meta:{title:"name",hash:"useActive-name"}},r.a.createElement("p",null,"The name of the route to compare against the response object.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"params",hash:"useActive-params"}},r.a.createElement("p",null,"An object containing route parameters. These will be compared against the route params of the response object.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"partial",hash:"useActive-partial"}},r.a.createElement("p",null,"Allows ancestor routes to be considered active when true. Defaults to false."),r.a.createElement(o.d,{lang:"jsx"},'// response = { name: "User Album", params: { id: "abcde" }}\n// where "User Album" is a child route of "User"\n\nuseActive({ name: "User" }); // false\nuseActive({ name: "User", partial: true }); // true'))),r.a.createElement(o.e,{tag:"h4",meta:{title:"components",hash:"useActive-components"}},r.a.createElement("p",null,"The base active check only checks that the route (i.e. pathname) is active. ",r.a.createElement(o.f,null,"components")," allows you to check if other components of the location are also active."),r.a.createElement(o.d,{lang:"jsx"},'useActive({\n  name: "Results",\n  components: loc => loc.query === "page=3"\n});\n\n// active for /results?page=3\n// not active for /results?page=1')))}var T={title:"useNavigating()",hash:"useNavigating"};function w(){return r.a.createElement(o.e,{meta:T},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"useNavigating")," hook is used to determine if the application is currently navigating. When the application is navigating, it returns a function to cancel the navigation."),r.a.createElement("p",null,"This is only useful for asynchronous routes because with synchronous routes, navigation happens immediately."),r.a.createElement(o.d,{lang:"jsx"},'import { useNavigating } from "@curi/react-dom";\n\nfunction CancelNavigation() {\n  const cancel = useNavigating();\n\n  return cancel\n    ? <button onClick={cancel}>Cancel</button>\n    : null;\n}'),r.a.createElement(o.g,null,r.a.createElement("p",null,"Ideally, browsers would natively handle asynchronous navigation and this would be unnecessary. For the time being, this is the next best solution.")))}var A={title:"Options",hash:"useLocation-opts"},x={title:"useLocation()",hash:"useLocation",children:[A]};function R(){return r.a.createElement(o.e,{meta:x},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"useLocation")," hook creates a location object."),r.a.createElement(o.d,{lang:"jsx"},'import { useLocation } from \'@curi/react-dom\';\n        \nuseLocation({\n  name: "Video",\n  params: { id: "jaifeo9" } },\n  hash: "comments",\n  query: "t=15"\n});'),r.a.createElement(o.e,{tag:"h3",meta:A},r.a.createElement(o.e,{tag:"h4",meta:{title:"name",hash:"useLocation-name"}},r.a.createElement("p",null,"The name of the route to generate the location's pathname from. If this is not provided, the generated location's pathname will be an empty string (",r.a.createElement(o.f,null,'""'),");")),r.a.createElement(o.e,{tag:"h4",meta:{title:"params",hash:"useLocation-params"}},r.a.createElement("p",null,"An object of params for the named route.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"hash",hash:"useLocation-hash"}},r.a.createElement("p",null,"A hash string for the location.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"query",hash:"useLocation-query"}},r.a.createElement("p",null,"The location's query value."),r.a.createElement("p",null,"By default, this is expected to be a string, but if you configure your history object with the"," ",r.a.createElement("a",{href:"https://github.com/pshrmn/hickory/blob/master/docs/api/browser.md#options"},r.a.createElement(o.f,null,"query"))," ","option, this may be something else.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"state",hash:"useLocation-state"}},r.a.createElement("p",null,"State data to associate with the location. This must be serializable."))))}var j={title:"Options",hash:"useHref-opts"},H={title:"useHref()",hash:"useHref",children:[j]};function U(){return r.a.createElement(o.e,{meta:H},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"useHref")," hook creates a URL string."),r.a.createElement(o.d,{lang:"jsx"},'import { useHref } from \'@curi/react-dom\';\n        \nconst href = useHref({\n  name: "Video",\n  params: { id: "jaifeo9" } },\n  hash: "comments",\n  query: "t=15"\n});\n// href = "/video/jaifeo9?t=15#comments"'),r.a.createElement(o.e,{tag:"h3",meta:j},r.a.createElement(o.e,{tag:"h4",meta:{title:"name",hash:"useHref-name"}},r.a.createElement("p",null,"The name of the route to generate the location's pathname from. If this is not provided, the generated location's pathname will be an empty string (",r.a.createElement(o.f,null,'""'),");")),r.a.createElement(o.e,{tag:"h4",meta:{title:"params",hash:"useHref-params"}},r.a.createElement("p",null,"An object of params for the named route.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"hash",hash:"useHref-hash"}},r.a.createElement("p",null,"A hash string for the location.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"query",hash:"useHref-query"}},r.a.createElement("p",null,"The location's query value."),r.a.createElement("p",null,"By default, this is expected to be a string, but if you configure your history object with the"," ",r.a.createElement("a",{href:"https://github.com/pshrmn/hickory/blob/master/docs/api/browser.md#options"},r.a.createElement(o.f,null,"query"))," ","option, this may be something else."))))}var q={title:"Props",hash:"ResponseConsumer-props"},_={title:"<ResponseConsumer>",hash:"ResponseConsumer",children:[q]};function C(){return r.a.createElement(o.e,{meta:_},r.a.createElement("p",null,"A context consumer component for injecting router values into components. Its primary use case is in class components."),r.a.createElement(o.d,{lang:"jsx"},"import { ResponseConsumer } from '@curi/react-native';\n\nclass MyComponent {\n  render() {\n    return (\n      <ResponseConsumer>\n        {({ router, response, navigation }) => {\n          // pass these props to any components\n          // that needs them\n          return (\n            <ThingThatNeedsResponse\n              response={response}\n            />\n          );\n        }}\n      </ResponseConsumer>\n    );\n  }\n}"),r.a.createElement(o.e,{tag:"h3",meta:q},r.a.createElement(o.e,{tag:"h4",meta:{title:"children",hash:"ResponseConsumer-children"}},r.a.createElement("p",null,"A render-invoked function that returns a React element. This function will receive an object with ",r.a.createElement(o.f,null,"router"),","," ",r.a.createElement(o.f,null,"response")," and ",r.a.createElement(o.f,null,"navigation")," properties."))))}var N=r.a.memo(function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(o.b,null,r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"@curi/react-native")," package provides components to use Curi routing in a React Native application."),r.a.createElement("p",null,"For more information on using Curi with React Native, please check out the"," ",r.a.createElement(l.a,{name:"Guide",params:{slug:"react-native"}},"React Native guide"),".")),r.a.createElement(o.a,null,r.a.createElement(c,null),r.a.createElement(h,null),r.a.createElement(d,null),r.a.createElement(f,null),r.a.createElement(y,null),r.a.createElement(L,null),r.a.createElement(w,null),r.a.createElement(R,null),r.a.createElement(U,null),r.a.createElement(C,null)))}),I=[{title:"Installation",hash:"installation"},{title:"About",hash:"about"},{title:"API",hash:"API",children:[s,m,E,g,v,b,T,x,H,_]}];a.d(t,"component",function(){return N}),a.d(t,"contents",function(){return I})}}]);