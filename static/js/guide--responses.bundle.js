(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{39:function(e,t,n){"use strict";n.r(t),n.d(t,"component",function(){return p}),n.d(t,"contents",function(){return h});var a=n(0),r=n.n(a),o=n(3),l=n(27),s={title:"Responses"},c={title:"The Properties of a Response Object",hash:"response-properties"},i={title:"Response Body",hash:"response-body"},u={title:"Redirect Response",hash:"redirect-properties"},h=[c,i,u];function p(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(l.g,{title:s.title},r.a.createElement("p",null,"When Curi receives a location, it compares the location's"," ",r.a.createElement(l.d,null,"pathname")," to each route's ",r.a.createElement(l.d,null,"path")," to find which one matches best and uses that route to create a response object.")),r.a.createElement(l.c,{meta:c,tag:"h2"},r.a.createElement("p",null,"There are two types of response properties."),r.a.createElement("p",null,'The "match" properties are set based on the route that matches a location. A response always has these properties.'),r.a.createElement(l.b,null,"// match properties\n{\n  // The location object used to generate the response.\n  location: { pathname: '/photos/6789/12345', ... },\n\n  // The name of the best matching route\n  name: 'Photo',\n\n  // The name of ancestor routes that matched\n  // part of the location's pathname\n  partials: ['Album'],\n\n  // An object containing the values parsed\n  // from the pathname by path-to-regexp.\n  // This includes params from ancestor routes.\n  params: { photoID: 12345, albumID: 6789 },\n}"),r.a.createElement("p",null,'The "settable" properties are ones that are added by a matched route\'s'," ",r.a.createElement(l.d,null,"respond")," function. These only exist on the response when they are returned by a route's ",r.a.createElement(l.d,null,"respond")," function."),r.a.createElement("p",null,'The "settable" properties are:'),r.a.createElement(l.c,{tag:"h3",meta:{title:"body",hash:"settable-body"}},r.a.createElement("p",null,"The component(s) that should be rendered for a route.")),r.a.createElement(l.c,{tag:"h3",meta:{title:"meta",hash:"settable-meta"}},r.a.createElement("p",null,"An object with metadata for a response.")),r.a.createElement(l.c,{tag:"h3",meta:{title:"data",hash:"settable-data"}},r.a.createElement("p",null,"A place to attach any data you want to the response, such as data loaded in the route's ",r.a.createElement(l.d,null,"resolve")," function.")),r.a.createElement(l.c,{tag:"h3",meta:{title:"redirect",hash:"settable-redirect"}},r.a.createElement("p",null,"An object describing a route that Curi should automatically redirect to.")),r.a.createElement(l.b,null,"// settable properties (optional)\n{\n  body: Photo,\n  // or maybe\n  body: {\n    menu: PhotoMenu,\n    main: Photo\n  },\n  // Please see below for more information\n  // about this property\n\n  meta: {\n    status: 200,\n    title: 'Photo 12345'\n  },\n\n  data: {...},\n\n  redirect: {...}\n}")),r.a.createElement(l.c,{meta:i,tag:"h2"},r.a.createElement("p",null,"Curi isn't strict about how you use responses, but you will most likely always want to use a route's ",r.a.createElement(l.d,null,"respond")," function to attach a ",r.a.createElement(l.d,null,"body")," property to a response. The usual pattern is to use a route's ",r.a.createElement(l.d,null,"body")," property to describe which component(s) to render when a route matches. This can either be a single component for basic layouts or an object with a number of components for"," ",r.a.createElement(o.a,{name:"Example",params:{slug:"multi-body"}},"advanced layouts"),"."),r.a.createElement(l.e,null,r.a.createElement("p",null,"Each route should use the same ",r.a.createElement(l.d,null,"body"),' "shape". If one route returns a single component while another route return an object, you will be making rendering more complicated for yourself.')),r.a.createElement(l.b,null,"// do NOT do this\n// mixing body shapes complicates rendering\nconst routes = prepareRoutes([\n  {\n    respond() {\n      return { body: One }\n    }\n  },\n  {\n    respond() {\n      return {\n        body: {\n          main: Main,\n          menu: Menu\n        }\n      }\n    }\n  }\n]);")),r.a.createElement(l.c,{meta:u,tag:"h2"},r.a.createElement("p",null,"When a route's ",r.a.createElement(l.d,null,"respond")," function returns an object with a"," ",r.a.createElement(o.a,{name:"Package",params:{package:"router",version:"v2"},hash:"response"},r.a.createElement(l.d,null,"redirect")," property"),", the router will use it to generate a location object that Curi will automatically redirect to."),r.a.createElement(l.b,null,'{\n  // The redirect property provides information on\n  // where you should redirect to\n  redirect: { name: "Login" }\n}'),r.a.createElement("p",null,"When creating a router, you can set the ",r.a.createElement(l.d,null,"invisibleRedirects")," ","option to ",r.a.createElement(l.d,null,"true")," and the response will not be sent to observers and one time functions. Instead, the response for the location that is redirected to will be the next emitted response. In either case, the router will automatically redirect to the route specified by ",r.a.createElement(l.d,null,"response.redirect"),"."),r.a.createElement(l.b,null,"const router = createRouter(browser, routes, {\n  invisibleRedirects: true\n});"),r.a.createElement("p",null,"This property can also be used to specify an external redirect (a redirect to a location that is not within the application). This is done by setting an ",r.a.createElement(l.d,null,"externalURL")," property on the"," ",r.a.createElement(l.d,null,"redirect")," object. It is up to the application to redirect to the external location. Responses with an external redirect will be emitted when ",r.a.createElement(l.d,null,"invisibleRedirects")," is ",r.a.createElement(l.d,null,"true"),"."),r.a.createElement(l.b,null,'// a route with an external redirect\n{\n  respond() {\n    return {\n      redirect: {\n        externalURL: "https://example.com"\n      }\n    };\n  }\n}\n\n// a route observe can detect and automatically redirect\nrouter.observe(({ response }) => {\n  if (response.redirect && response.redirect.externalURL) {\n    window.location.replace(response.redirect.externalURL);\n  }\n})')))}}}]);