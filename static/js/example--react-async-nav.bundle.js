(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{81:function(e,n,t){"use strict";t.r(n),t.d(n,"default",function(){return c});var a=t(0),i=t.n(a),r=t(28),l={title:"Async Navigation"};function c(){return i.a.createElement(i.a.Fragment,null,i.a.createElement("h1",null,l.title),i.a.createElement(r.h,{title:"Explanation",id:"explanation"},i.a.createElement(r.d,null,i.a.createElement("p",null,"If the ",i.a.createElement(r.a,null,"Link"),"'s ",i.a.createElement(r.e,null,"children")," prop is a render-invoked function, it will be passed a boolean to indicate whether or not it is currently navigating. We can modify what the function returns to render a loading indicator while waiting for the navigation to complete.")),i.a.createElement(r.b,{lang:"jsx"},"<Link name=\"Movie\" params={{ id: 'some_movie' }}>\n  {navigating => (\n    <React.Fragment>\n      Some Movie {navigating ? <Spinner /> : null}\n    </React.Fragment>\n  )}\n</Link>")),i.a.createElement(r.h,{title:"Live Demo",id:"demo"},i.a.createElement(r.c,{id:"github/pshrmn/curi/tree/master/examples/react/async-nav"})),i.a.createElement(r.g,{path:"react/async-nav"}))}}}]);