(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{80:function(e,t,a){"use strict";a.r(t);var n=a(0),l=a.n(n),r=a(21),o=a(3),s={title:"history",hash:"history"},i={title:"routes",hash:"routes"},c={title:"options",hash:"options"},u={title:"Arguments",hash:"createRouter-arguments",children:[s,i,c]},h={title:"url",hash:"url"},m={title:"navigate",hash:"navigate"},p={title:"once",hash:"once"},d={title:"observe",hash:"observe"},f={title:"cancel",hash:"cancel-property"},E={title:"current",hash:"current-property"},g={title:"route",hash:"router-route"},b={title:"history",hash:"history-property"},v={title:"external",hash:"router-external"},w={title:"Router",hash:"router",children:[h,m,p,d,f,E,g,b,v]},y={title:"createRouter",hash:"createRouter"};var A={title:"routes",hash:"options-routes"},R={title:"Arguments",hash:"prepareRoutes-arguments",children:[A]},T={title:"prepareRoutes",hash:"prepareRoutes"};var x={title:"Route Objects",hash:"route-objects"};var j={title:"announce",hash:"announce"};var k={title:"scroll",hash:"scroll"};var I={title:"title",hash:"title"};var H={about:l.a.createElement(r.b,null,l.a.createElement("p",null,"The ",l.a.createElement(r.f,null,"@curi/router")," package provides functions for creating a single-page application's router.")),api:l.a.createElement(r.a,null,l.a.createElement(function(){return l.a.createElement(r.e,{meta:T},l.a.createElement("p",null,"The ",l.a.createElement(r.f,null,"prepareRoutes")," function takes an application's routes and route interactions and returns an object. The returned object will be passed to ",l.a.createElement(r.f,null,"createRouter"),"."),l.a.createElement(r.d,null,'import { prepareRoutes } from \'@curi/router\';\n\nconst routes = prepareRoutes([\n  { name: "Home", path: "" },\n  // ...\n  { name: "Not Found", path: "(.*)" }\n]);'),l.a.createElement("p",null,l.a.createElement(r.f,null,"prepareRoutes")," creates a reusable routing object, which means that it can be reused on the server instead of recompiling it for every request."),l.a.createElement(r.e,{tag:"h4",meta:R},l.a.createElement(r.e,{tag:"h5",meta:A},"An array of ",l.a.createElement(o.a,{hash:"route-objects"},"route objects"),".")))},null),l.a.createElement(function(){return l.a.createElement(r.e,{meta:y},l.a.createElement("p",null,"The ",l.a.createElement(r.f,null,"createRouter")," function is used to create a router."),l.a.createElement(r.d,null,'import { createRouter } from "@curi/router";\n\nconst router = createRouter(browser, routes, options);'),l.a.createElement(r.e,{tag:"h4",meta:u},l.a.createElement(r.e,{tag:"h5",meta:s},l.a.createElement("p",null,"A ",l.a.createElement("a",{href:"https://github.com/pshrmn/hickory"},"Hickory")," history function. The"," ",l.a.createElement(o.a,{name:"Guide",params:{slug:"history"}},"history guide")," ","provides more information on how to choose which history type is right for an application."),l.a.createElement(r.d,{lang:"jsx"},'import { browser } from "@hickory/browser";\n\nconst router = createRouter(browser, routes);')),l.a.createElement(r.e,{tag:"h5",meta:i},l.a.createElement("p",null,"An array of prepared"," ",l.a.createElement(o.a,{name:"Guide",params:{slug:"routes"}},"route")," ","objects describing all valid routes in the application."),l.a.createElement(r.d,{lang:"jsx"},'const routes = prepareRoutes([\n  { name: "Home", path: "" },\n  { name: "About", path: "about" }\n]);\n\nconst router = createRouter(browser, routes);')),l.a.createElement(r.e,{tag:"h5",meta:c},l.a.createElement("p",null,"An optional object with additional properties that can be passed to the router."),l.a.createElement(r.e,{tag:"h6",meta:{title:l.a.createElement(r.f,null,"sideEffects"),hash:"options-sideEffects"}},l.a.createElement("p",null,"An array of"," ",l.a.createElement(o.a,{name:"Guide",params:{slug:"side-effects"}},"side effect")," ","objects."),l.a.createElement(r.d,null,'import { createRouter, scroll } from "@curi/router";\n\nconst router = createRouter(browser, routes, {\n  sideEffects: [scroll()]\n});')),l.a.createElement(r.e,{tag:"h6",meta:{title:l.a.createElement(r.f,null,"external"),hash:"options-external"}},l.a.createElement("p",null,"Values that should be accessible to a route's ",l.a.createElement(r.f,null,"resolve")," ","function ",l.a.createElement(r.f,null,"respond")," functions."),l.a.createElement("p",null,"Using ",l.a.createElement(r.f,null,"external")," allows you to access APIs, data, etc. without having to import it in the module where the routes are defined."),l.a.createElement(r.d,null,'const client = new ApolloClient();\nconst router = createRouter(browser, routes, {\n  external: { client, greeting: "Hi!" }\n});'),l.a.createElement(r.d,null,'const routes = prepareRoutes([\n  {\n    name: "User",\n    path: "user/:id",\n    resolve(match, external) {\n      // use the external object to make a query\n      return external.client.query();\n    }\n  }\n]);')),l.a.createElement(r.e,{tag:"h6",meta:{title:l.a.createElement(r.f,null,"invisibleRedirects"),hash:"options-invisibleRedirects"}},l.a.createElement("p",null,"When a response object has a ",l.a.createElement(r.f,null,"redirect")," property, Curi will automatically navigate to the location specified by the property."),l.a.createElement("p",null,"If the ",l.a.createElement(r.f,null,"invisibleRedirects")," property is ",l.a.createElement(r.f,null,"false")," ","(the default), Curi will emit the redirect response (any observers will be called with the response)."),l.a.createElement("p",null,"If ",l.a.createElement(r.f,null,"invisibleRedirects")," is set to ",l.a.createElement(r.f,null,"true"),", Curi will skip emitting the redirect; this effectively makes the redirect invisible to the application."),l.a.createElement("p",null,l.a.createElement(r.f,null,"invisibleRedirects")," should always be ",l.a.createElement(r.f,null,"false")," ","for server-side rendering, otherwise the application will render content for the incorrect location."),l.a.createElement(r.d,null,'const routes = prepareRoutes([\n  {\n    name: "Old",\n    path: "old/:id",\n    respond({ params }) {\n      // setup a redirect to the "New" route\n      return {\n        redirect: {\n          name: "New",\n          params\n        }\n      };\n    }\n  },\n  {\n    name: "New",\n    path: "new/:id"\n  }\n]);\n\nconst router = createRouter(browser, routes, {\n  invisibleRedirects: false\n});\n// navigating to "/old/2" will automatically redirect\n// to "/new/2" without emitting a response for the Old route')))),l.a.createElement(r.e,{tag:"h4",meta:w},l.a.createElement("p",null,"The router has a number of properties for you to use when rendering your application."),l.a.createElement(r.e,{tag:"h5",meta:h},l.a.createElement("p",null,"The ",l.a.createElement(r.f,null,"url")," method is used to generate a URL string."),l.a.createElement(r.d,null,'router.url({\n  name: "User",\n  params: { id: 1 },\n  hash: "other"\n});'),l.a.createElement(r.e,{tag:"h6",meta:{title:"Arguments",hash:"url-args"}},l.a.createElement("p",null,l.a.createElement(r.f,null,"url")," takes a single argument, an object with details about the location to navigate to and how to navigate."),l.a.createElement(r.e,{tag:"h6",meta:{title:"name",hash:"url-name"}},l.a.createElement("p",null,"The name of a route.")),l.a.createElement(r.e,{tag:"h6",meta:{title:"params",hash:"url-params"}},l.a.createElement("p",null,"An object of any route params for the named route (and any of its ancestors that require params).")),l.a.createElement(r.e,{tag:"h6",meta:{title:"hash",hash:"url-hash"}},l.a.createElement("p",null,"The hash string of a location.")),l.a.createElement(r.e,{tag:"h6",meta:{title:"query",hash:"url-query"}},l.a.createElement("p",null,"The query value of a location.")))),l.a.createElement(r.e,{tag:"h5",meta:m},l.a.createElement("p",null,"The ",l.a.createElement(r.f,null,"navigate")," method is used to navigate programmatically. It takes an object with the details of where and how to navigate."),l.a.createElement(r.d,null,'router.navigate({ url: "/photos/123/456" });\n// navigates to "/photos/123/456"\n// using default "anchor" method'),l.a.createElement(r.e,{tag:"h6",meta:{title:"Arguments",hash:"navigate-args"}},l.a.createElement("p",null,l.a.createElement(r.f,null,"navigate")," takes a single argument, an object with details about the location to navigate to and how to navigate."),l.a.createElement(r.e,{tag:"h6",meta:{title:"url",hash:"navigate-url"}},l.a.createElement("p",null,"The URL string of the location to navigate to.")),l.a.createElement(r.e,{tag:"h6",meta:{title:"state",hash:"navigate-state"}},l.a.createElement("p",null,"Any serializable state to attach to the location.")),l.a.createElement(r.e,{tag:"h6",meta:{title:"method",hash:"navigate-method"}},l.a.createElement("p",null,"How to navigate. ",l.a.createElement(r.f,null,'"push"')," appends the new location after the current one. ",l.a.createElement(r.f,null,'"replace"')," replaces the current location. ",l.a.createElement(r.f,null,'"anchor"')," is the default method and acts like clicking a link. This behavior is a mix of"," ",l.a.createElement(r.f,null,'"push"')," and ",l.a.createElement(r.f,null,'"replace"')," where the current location is replaced if the new location has the exact same URL.")),l.a.createElement(r.e,{tag:"h6",meta:{title:"finished & cancelled",hash:"navigate-finished-cancelled"}},l.a.createElement("p",null,l.a.createElement(r.f,null,"finished")," is a function to call once the navigation has finished."),l.a.createElement("p",null,l.a.createElement(r.f,null,"cancelled")," is a function to call if the navigation is superseded by another navigation."),l.a.createElement("p",null,"These properties should only be provided when navigating to asynchronous routes. Synchronous routes navigate immediately, so there is no waiting time for the navigation.")))),l.a.createElement(r.e,{tag:"h5",meta:p},l.a.createElement("p",null,"Register a response handler that will only be called one time."),l.a.createElement("p",null,"When a matched route is async (it has a ",l.a.createElement(r.f,null,"resolve")," ","function), a response will not be created until the function has resolved. ",l.a.createElement(r.f,null,"once")," is useful for delaying an application's initial render."),l.a.createElement(r.d,null,"router.once(({ response }) => {\n  // render the application based on the response\n});"),l.a.createElement(r.e,{tag:"h6",meta:{title:"Arguments",hash:"once-args"}},l.a.createElement(r.e,{tag:"h6",meta:{title:"Response Handler",hash:"once-response-handler"}},l.a.createElement("p",null,"A function that will be called once the router has generated a response. If the router has already generated a response, the function will be called immediately with the existing response. Otherwise, the function will be called once a new response is generated."),l.a.createElement("p",null,"The function will be passed an object with three properties: the"," ",l.a.createElement(r.f,null,"response"),", a ",l.a.createElement(r.f,null,"navigation")," object, and the"," ",l.a.createElement(r.f,null,"router"),".")),l.a.createElement(r.e,{tag:"h6",meta:{title:"Options",hash:"once-options"}},l.a.createElement(r.e,{tag:"h6",meta:{title:"initial",hash:"once-options-initial"}},l.a.createElement("p",null,"When ",l.a.createElement(r.f,null,"true")," (the default), the response handler will be called immediately if there is an existing response. When"," ",l.a.createElement(r.f,null,"false"),", the response handler will not be called until a new response is generated."),l.a.createElement(r.d,null,"router.once(responseHandler, {\n  initial: false\n});"))))),l.a.createElement(r.e,{tag:"h5",meta:d},l.a.createElement("p",null,"Register a response handler that will be called every time a response is generated."),l.a.createElement("p",null,"When a matched route is async (it has a ",l.a.createElement(r.f,null,"resolve")," ","function), a response will not be created until the function has resolved."),l.a.createElement(r.d,null,"router.observe(({ response }) => {\n  // render the application based on the response\n});"),l.a.createElement("p",null,l.a.createElement(r.f,null,"observe")," returns a function, which can be called to stop observing."),l.a.createElement(r.d,null,"const stopObserving = router.observe(fn);\n// the router will call the response handler for all responses\n\nstopObserving();\n// the router no longer calls the response handler"),l.a.createElement(r.e,{tag:"h6",meta:{title:"Arguments",hash:"observe-args"}},l.a.createElement(r.e,{tag:"h6",meta:{title:"Response Handler",hash:"observe-response-handler"}},l.a.createElement("p",null,"A function that will be called whenever a new response is generated. If a response already exists when the function is called, the response handler will be called immediately with the existing response.")),l.a.createElement(r.e,{tag:"h6",meta:{title:"Options",hash:"observe-options"}},l.a.createElement(r.e,{tag:"h6",meta:{title:"initial",hash:"observe-options-initial"}},l.a.createElement("p",null,"When ",l.a.createElement(r.f,null,"true")," (the default), the response handler will be called immediately if there is an existing response. When"," ",l.a.createElement(r.f,null,"false"),", the response handler will not be called until a new response is generated."),l.a.createElement(r.d,null,"router.observe(responseHandler, {\n  initial: false\n});"))))),l.a.createElement(r.e,{tag:"h5",meta:f},l.a.createElement("p",null,"With navigating to an asynchronous route, there is a time between when a navigation begins and when the route's asynchronous actions have finished, during which a user may decide to cancel the navigation."),l.a.createElement("p",null,"In a multi-page application, the browser updates the refresh button to a stop button. There is no equivalent functionality for single-page applications, so Curi provides a ",l.a.createElement(r.f,null,"cancel")," ","function to roughly imitate the behavior."),l.a.createElement("p",null,l.a.createElement(r.f,null,"cancel")," takes an observer function that will be called when navigation starts and when the navigation is finished. When the navigation starts, the observer function will be called with a function to cancel the navigation. When the navigation finishes, the function will be called with ",l.a.createElement(r.f,null,"undefined"),"."),l.a.createElement("p",null,"Calling ",l.a.createElement(r.f,null,"cancel")," returns a function to stop observing."),l.a.createElement(r.d,null,"const stopCancelling = router.cancel(fn);\n// fn will be called for async navigation\n\nstopCancelling();\n// fn will no longer be called"),l.a.createElement(r.e,{tag:"h6",meta:{title:"Arguments",hash:"cancel-args"}},l.a.createElement(r.e,{tag:"h6",meta:{title:"Cancel Handler",hash:"cancel-handler"}},l.a.createElement("p",null,"A function that will be called when an asynchronous navigation begins and ends."),l.a.createElement("p",null,"When the navigation begins, the function will be passed a function that can be called to cancel the navigation."),l.a.createElement("p",null,"When the navigation ends, the function will be passed"," ",l.a.createElement(r.f,null,"undefined"),"."),l.a.createElement(r.d,null,"router.cancel(fn => {\n  if (fn === undefined) {\n    // the navigation has finished/been cancelled\n  } else {\n    // calling fn will cancel the navigation\n  }\n});"),l.a.createElement("p",null,"Calling the cancel handler after the navigation has ended does nothing.")))),l.a.createElement(r.e,{tag:"h5",meta:E},l.a.createElement("p",null,"The ",l.a.createElement(r.f,null,"current")," method returns the current"," ",l.a.createElement(r.f,null,"response")," and ",l.a.createElement(r.f,null,"navigation")," objects."),l.a.createElement(r.g,null,l.a.createElement("p",null,"If you call ",l.a.createElement(r.f,null,"current")," before the initial response has been generated, the ",l.a.createElement(r.f,null,"response")," and ",l.a.createElement(r.f,null,"navigation")," ","properties will be ",l.a.createElement(r.f,null,"null"),".")),l.a.createElement(r.d,null,"const router = createRouter(browser, routes);\nconst tooSoon = router.current();\n// tooSoon.response === null\n// tooSoon.navigation === null\n\nrouter.once(({ response, navigation }) => {\n  const perfect = router.current();\n  // perfect.response === response\n  // perfect.navigation === navigation\n});")),l.a.createElement(r.e,{tag:"h5",meta:g},l.a.createElement("p",null,"The ",l.a.createElement(r.f,null,"route")," method is used to get the public data about a route. This is useful in conjuction with"," ",l.a.createElement(o.a,{name:"Guide",params:{slug:"route-interactions"}},"route interactions"),".")),l.a.createElement(r.e,{tag:"h5",meta:b},l.a.createElement("p",null,"The route's history object.")),l.a.createElement(r.e,{tag:"h5",meta:v},l.a.createElement("p",null,"The ",l.a.createElement(r.f,null,"external")," value that was passed through"," ",l.a.createElement(o.a,{hash:"options-external"},l.a.createElement(r.f,null,"createRouter"),"'s options"),"."))))},null),l.a.createElement(function(){return l.a.createElement(r.e,{meta:j},l.a.createElement("p",null,"The ",l.a.createElement(r.f,null,"announce")," side effect is used to announce navigation to screen readers. The announcement is done using an"," ",l.a.createElement("a",{href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions"},"ARIA live region"),"."),l.a.createElement("p",null,"The side effect will create an element with a ",l.a.createElement(r.f,null,"aria-live")," ","attribute and add it to the DOM. This element will be styled to not be displayed on screen (but not actually hidden) so that only screen readers detect it."),l.a.createElement(r.i,null,l.a.createElement("p",null,"This side effect should only be used in the browser.")),l.a.createElement("p",null,"The ",l.a.createElement(r.f,null,"announce")," function takes a single argument, which is a function that receives the object emitted by the router and returns the string that should be set for the screen reader to read."),l.a.createElement("p",null,"The DOM element's ",l.a.createElement(r.f,null,"aria-live")," attribute will be"," ",l.a.createElement(r.f,null,'"assertive"')," by default, but you can use the side-effect factory's second argument to pass an alternative (i.e."," ",l.a.createElement(r.f,null,'"polite"'),")."),l.a.createElement(r.d,null,"import { createRouter, announce } from '@curi/router';\n\nconst announcer = announce(\n  ({ response }) => `Navigated to ${response.meta.title}`\n);\n\nconst politeAnnouncer = announce(\n  ({ response }) => `Navigated to ${response.meta.title}`,\n  \"polite\"\n);\n\nconst router = curi(history, routes, {\n  sideEffects: [announcer]\n});"))},null),l.a.createElement(function(){return l.a.createElement(r.e,{meta:k},l.a.createElement("p",null,"The ",l.a.createElement(r.f,null,"scroll")," side effect will scroll the page after a navigation."),l.a.createElement(r.i,null,l.a.createElement("p",null,"This side effect should only be used in the browser.")),l.a.createElement("p",null,"When Curi is running in a browser, it relies on the"," ",l.a.createElement("a",{href:"https://developer.mozilla.org/en-US/docs/Web/API/History_API"},"History API")," ","to change locations. Navigating using the History API does not trigger scrolling to the top of the page after navigation, so this side effect scrolls for you."),l.a.createElement("p",null,"Pop navigation, such as clicking the browser's back and forward buttons, will rely on the browser to correctly restore the scroll position."),l.a.createElement(r.d,null,'import { createRouter, scroll } from "@curi/router";\n\nconst router = createRouter(browser, routes, {\n  sideEffects: [scroll()]\n});'))},null),l.a.createElement(function(){return l.a.createElement(r.e,{meta:I},l.a.createElement("p",null,"The ",l.a.createElement(r.f,null,"title")," side effect will set the document's title."),l.a.createElement(r.i,null,l.a.createElement("p",null,"This side effect should only be used in the browser.")),l.a.createElement("p",null,"The function takes a single argument, which is a function that takes the object emitted by a router and returns the string to set as the title."),l.a.createElement(r.d,null,"import { createRouter, title } from '@curi/router';\n\nconst router = createRouter(history, routes, {\n  sideEffects: [\n    title(({ response }) => {\n      return `${response.meta.title} | My Site`;\n    })\n  ]\n});"),l.a.createElement("p",null,"The recommended approach for determining a title is to have routes set their ",l.a.createElement(r.f,null,"meta.title")," property in their ",l.a.createElement(r.f,null,"respond")," method."),l.a.createElement(r.d,null,'{\n  name: "About",\n  path: "about",\n  respond() {\n    return {\n      body: About,\n      meta: {\n        title: "About"\n      }\n    }\n  }\n}\n// when the About route matches, document.title = "About | My Site"'))},null),l.a.createElement(function(){return l.a.createElement(r.e,{meta:x},l.a.createElement(r.e,{meta:{title:"route.name",hash:"name"},tag:"h3"},l.a.createElement("p",null,"A string that will be used to identify a route. This must be unique for every route."),l.a.createElement(r.d,null,"[\n  { name: 'Home' },\n  { name: 'Album' },\n  { name: 'Not Found' }\n];")),l.a.createElement(r.e,{meta:{title:"route.path",hash:"path"},tag:"h3"},l.a.createElement("p",null,"A string pattern describing what the route matches. ",l.a.createElement(r.f,null,"path")," ","strings should not have a leading slash."),l.a.createElement(r.d,null,'[\n  { path: "" }, // yes\n  { path: "/" }, // no\n]'),l.a.createElement("p",null,"A route's ",l.a.createElement(r.f,null,"path")," is used to check if it matches a location's"," ",l.a.createElement(r.f,null,"pathname"),". When the ",l.a.createElement(r.f,null,"path")," matches, the route is selected."),l.a.createElement("p",null,"Path matching is done using regular expressions compiled by"," ",l.a.createElement("a",{href:"https://github.com/pillarjs/path-to-regexp"},l.a.createElement(r.f,null,"path-to-regexp")),". A path can include"," ",l.a.createElement("a",{href:"https://github.com/pillarjs/path-to-regexp#parameters"},"parameters"),", which are dynamic variables that are parsed from a location's"," ",l.a.createElement(r.f,null,"pathname"),". For advanced path formatting, please read"," ",l.a.createElement(r.f,null,"path-to-regexp"),"'s documentaion."),l.a.createElement(r.d,null,"[\n  { name: 'Home', path: '' },\n  // when the pathname is a/yo, albumID = \"yo\"\n  { name: 'Album', path: 'a/:albumID' },\n  // the path (.*) matches every pathname\n  { name: 'Not Found', path: '(.*)' }\n];\n\n// don't include a leading forward slash\n// { name: 'Home', path: '/' }"),l.a.createElement(r.i,null,l.a.createElement("p",null,l.a.createElement(r.f,null,"path-to-regexp")," supports arrays and RegExps, but Curi only supports string paths."))),l.a.createElement(r.e,{meta:{title:"route.resolve",hash:"resolve"},tag:"h3"},l.a.createElement("p",null,"The ",l.a.createElement(r.f,null,"resolve")," property is a function that returns a Promise. It is used to run asynchronous actions for a route prior to rendering."),l.a.createElement("p",null,"A route with a ",l.a.createElement(r.f,null,"resolve")," function is asynchronous, while one with no ",l.a.createElement(r.f,null,"resolve")," functions is synchronous. You can read more about this in the"," ",l.a.createElement(o.a,{name:"Guide",params:{slug:"sync-or-async"}},"sync or async")," ","guide."),l.a.createElement("p",null,"Every time that a route with a ",l.a.createElement(r.f,null,"resolve")," function matches, the route's ",l.a.createElement(r.f,null,"resolve")," function will be called. Simple caching can be done with the ",l.a.createElement(r.f,null,"once")," function from"," ",l.a.createElement(o.a,{name:"Package",params:{package:"helpers",version:"v2"},hash:"once"},l.a.createElement(r.f,null,"@curi/helpers")),", while more advanced caching is left to the user."),l.a.createElement("p",null,"The function will be passed an object with the matched route properties: ",l.a.createElement(r.f,null,"name"),", ",l.a.createElement(r.f,null,"params"),", ",l.a.createElement(r.f,null,"partials"),", and ",l.a.createElement(r.f,null,"location"),"."),l.a.createElement(r.d,null,"const about = {\n  name: 'About',\n  path: 'about',\n  resolve({ name, params, partials, location }) {\n    return Promise.resolve(\"hurray!\");\n  }\n};"),l.a.createElement(r.g,null,l.a.createElement("p",null,"You should not perform side effects (e.g. passing the loaded data to a Redux store) in ",l.a.createElement(r.f,null,"resolve")," because it is possible that navigating to the route might be cancelled. If you must perform side effects for a route, you should do so in the route's"," ",l.a.createElement(r.f,null,"respond")," function, but even that should be avoided.")),l.a.createElement("p",null,"The value returned by the ",l.a.createElement(r.f,null,"resolve")," function will be passed to the route's ",l.a.createElement(r.f,null,"respond")," function through its"," ",l.a.createElement(r.f,null,"resolved")," property. If there is an uncaught error,"," ",l.a.createElement(r.f,null,"resolved")," will be ",l.a.createElement(r.f,null,"null")," and the ",l.a.createElement(r.f,null,"error")," ","will be passed."),l.a.createElement(r.d,null,"const about = {\n  name: 'About',\n  path: 'about',\n  resolve({ name, params, partials, location }) {\n    return Promise.resolve(\"hurray!\");\n  },\n  respond({ resolved, error }) {\n    if (error) {\n      // there was an uncaught error in the resolve function\n    }\n  }\n};")),l.a.createElement(r.e,{meta:{title:"route.respond",hash:"respond"}},l.a.createElement("p",null,"A function for modifying the response object."),l.a.createElement("p",null,"The object returned by a route's ",l.a.createElement(r.f,null,"respond")," function will be merged with the route's intrinsic match properties to create the response object."),l.a.createElement("p",null,"Only valid properties will be merged onto the response; everything else will be ignored. The valid properties are:"),l.a.createElement(r.e,{tag:"h3",meta:{title:"Arguments",hash:"response-arguments"}},l.a.createElement(r.e,{tag:"h4",meta:{title:"options",hash:"response-options"}},l.a.createElement("p",null,"A ",l.a.createElement(r.f,null,"respond")," function is passed an object with a number of properties that can be useful for modifying the response."),l.a.createElement(r.d,null,"{\n  respond: ({ match, resolved, error }) => {\n    // ...\n  }\n}"),l.a.createElement(r.e,{tag:"h5",meta:{title:"match",hash:"response-options-match"}},l.a.createElement("p",null,"An object with the intrinsic route properties of a response."),l.a.createElement(r.e,{tag:"h6",meta:{title:"name",hash:"response-options-match-name"}},l.a.createElement("p",null,"The name of the matched route.")),l.a.createElement(r.e,{tag:"h6",meta:{title:"params",hash:"response-options-match-params"}},l.a.createElement("p",null,"Route parameters parsed from the location.")),l.a.createElement(r.e,{tag:"h6",meta:{title:"partials",hash:"response-options-match-partials"}},l.a.createElement("p",null,"The names of any ancestor routes of the matched route.")),l.a.createElement(r.e,{tag:"h6",meta:{title:"location",hash:"response-options-match-location"}},l.a.createElement("p",null,"The location that was used to match the route.")),l.a.createElement(r.e,{tag:"h6",meta:{title:"key",hash:"response-options-match-key"}},l.a.createElement("p",null,"A two number tuple. The first number is the location's place in the session array. The second number starts and zero and is incremented by ",l.a.createElement(r.f,null,"replace")," navigation (",l.a.createElement(r.f,null,"[1,0]")," ","would be replaced by ",l.a.createElement(r.f,null,"[1,1]"),")."))),l.a.createElement(r.e,{tag:"h5",meta:{title:"resolved",hash:"response-options-resolved"}},l.a.createElement("p",null,"An object with the value returned by the route's"," ",l.a.createElement(r.f,null,"resolve")," function."),l.a.createElement("p",null,"If a route isn't async, ",l.a.createElement(r.f,null,"resolved")," will be"," ",l.a.createElement(r.f,null,"null"),"."),l.a.createElement(r.d,null,"// attach resolved data to the response\nconst user = {\n  name: 'User',\n  path: ':id',\n  resolve({ params, location }) {\n    return fetch(`/api/users/${params.id}`)\n      .then(resp => JSON.parse(resp));\n  },\n  respond: ({ resolved }) => {\n    return {\n      data: resolved\n    };\n  }\n}")),l.a.createElement(r.e,{tag:"h5",meta:{title:"error",hash:"response-options-error"}},l.a.createElement("p",null,"If the route has a ",l.a.createElement(r.f,null,"resolve")," function that throws an uncaught error, the ",l.a.createElement(r.f,null,"error")," property will be that error. Otherwise, the property will be ",l.a.createElement(r.f,null,"null"),"."),l.a.createElement("p",null,"Ideally, the ",l.a.createElement(r.f,null,"resolve")," function will always catch its errors, but ",l.a.createElement(r.f,null,"error")," serves as a safety check."),l.a.createElement(r.d,null,"// check if any of a route's resolve functions threw\nconst user = {\n  name: 'User',\n  path: ':id',\n  resolve({ params, location }) {\n    return fetch(`/api/users/${params.id}`)\n      .then(resp => JSON.parse(resp));\n  },\n  respond: ({ error, resolved }) => {\n    if (error) {\n      return {\n        meta: {\n          error\n        }\n      };\n    }\n    return {\n      data: resolved.data\n    };\n  }\n}")))),l.a.createElement(r.e,{tag:"h3",meta:{title:"Return Value",hash:"response-return"}},l.a.createElement(r.e,{tag:"h4",meta:{title:"body",hash:"response-body"}},l.a.createElement("p",null,"Typically, the ",l.a.createElement(r.f,null,"body")," is a component (or components) that will be rendered."),l.a.createElement(r.d,null,'import Home from "./components/Home";\nconst routes = prepareRoutes([\n  {\n    name: "Home",\n    path: "",\n    respond() {\n      return { body: Home };\n    }\n  },\n  // ...\n]);\n// response = { body: Home, ... }')),l.a.createElement(r.e,{tag:"h4",meta:{title:"meta",hash:"response-return-meta"}},l.a.createElement("p",null,"An object whose properties are metadata about the response. This may include the status of the response (200, 301, etc.), a title string for the document, or a description to be set as a page's"," ",l.a.createElement(r.f,null,'<meta name="Description">'),"."),l.a.createElement(r.d,null,'{\n  respond(){\n    return {\n      meta: {\n        title: "Some Page",\n        description: "This is some page",\n        status: 200\n      }\n    };\n  }\n}')),l.a.createElement(r.e,{tag:"h4",meta:{title:"data",hash:"response-return-data"}},l.a.createElement("p",null,"Anything you want it to be."),l.a.createElement(r.d,null,"{\n  respond() {\n    return { data: Math.random() };\n  }\n}\n// response = { data: 0.8651606708109429, ... }")),l.a.createElement(r.e,{tag:"h4",meta:{title:"redirect",hash:"response-return-redirect"}},l.a.createElement("p",null,"An object with the ",l.a.createElement(r.f,null,"name")," of the route to redirect to,"," ",l.a.createElement(r.f,null,"params")," (if required), and optional ",l.a.createElement(r.f,null,"hash"),","," ",l.a.createElement(r.f,null,"query"),", and ",l.a.createElement(r.f,null,"state")," properties."),l.a.createElement("p",null,"The other values are copied directly, but ",l.a.createElement(r.f,null,"redirect")," will be turned into a location object using the object's"," ",l.a.createElement(r.f,null,"name")," (and ",l.a.createElement(r.f,null,"params")," if required)."),l.a.createElement(r.d,null,'[\n  {\n    name: "Old Photo",\n    path: "photo/:id",\n    respond({ params }) {\n      return {\n        redirect: { name: "Photo", params }\n      };\n    }\n  },\n  {\n    name: "New Photo",\n    path: "p/:id"\n  }\n]\n// when the user navigates to /photo/1:\n// response = { redirect: { pathname: "/p/1", ... } }'),l.a.createElement("p",null,"The ",l.a.createElement(r.f,null,"redirect")," property can also be used to specify a redirect to an external location. An external redirect object has only one property: ",l.a.createElement(r.f,null,"exernalURL"),"."),l.a.createElement(r.d,null,'{\n  name: "Redirects",\n  path: "redirects",\n  respond() {\n    return {\n      redirect: {\n        externalURL: "https://example.com"\n      }\n    }\n  }\n}'),l.a.createElement("p",null,"Responses with an external redirect are always emitted, even when"," ",l.a.createElement(r.f,null,"invisibleRedirects")," is ",l.a.createElement(r.f,null,"true"),". The actual location changing is left to the application.")))),l.a.createElement(r.e,{meta:{title:"children",hash:"children"},tag:"h3"},l.a.createElement("p",null,"An optional array of route objects for creating nested routes."),l.a.createElement("p",null,"Any child routes will be matched relative to their parent route's"," ",l.a.createElement(r.f,null,"path"),". This means that if a parent route's ",l.a.createElement(r.f,null,"path")," ","string is ",l.a.createElement(r.f,null,'"one"')," and a child route's ",l.a.createElement(r.f,null,"path")," string is ",l.a.createElement(r.f,null,'"two"'),", the child will match a location whose pathname is"," ",l.a.createElement(r.f,null,"/one/two"),"."),l.a.createElement(r.d,null,"// '/a/Coloring+Book/All+Night' will be matched\n// by the \"Song\" route, with the params\n// { album: 'Coloring+Book', title: 'All+Night' }\n{\n  name: 'Album',\n  path: 'a/:album',\n  children: [\n    {\n      name: 'Song',\n      path: ':title'\n    }\n  ]\n}")),l.a.createElement(r.e,{meta:{title:"params",hash:"params"},tag:"h3"},l.a.createElement("p",null,"When ",l.a.createElement(r.f,null,"path-to-regexp")," matches paths, all parameters are extracted as strings. The ",l.a.createElement(r.f,null,"params")," object is used to specify functions to transform the extracted value."),l.a.createElement("p",null,"Properties of the ",l.a.createElement(r.f,null,"route.params")," object are the names of params to be parsed. The paired value should be a function that takes a string (the value from the ",l.a.createElement(r.f,null,"pathname"),") and returns a new value (transformed using the function you provide)."),l.a.createElement("p",null,"By default, each param is decoded using ",l.a.createElement(r.f,null,"decodeURIComponent"),". A param function can be used to leave the param in its encoded form or to parse an integer param into a number."),l.a.createElement(r.d,null,"const routes = prepareRoutes([\n  {\n    name: 'Number',\n    path: 'number/:num',\n    params: {\n      num: n => parseInt(n, 10)\n    }\n  }\n]);\n\n// when the user visits /number/1,\n// response.params will be { num: 1 }\n// instead of { num: \"1\" }"),l.a.createElement("p",null,"Unnamed params are referred to by their index in the ",l.a.createElement(r.f,null,"path"),"."),l.a.createElement(r.d,null,"const routes = prepareRoutes([\n  {\n    name: 'Not Found',\n    path: '(.*)',\n    params: {\n      // skip decoding the unmatched value\n      0: value => value\n    }\n  }\n]);")),l.a.createElement(r.e,{meta:{title:"pathOptions",hash:"pathOptions"},tag:"h3"},l.a.createElement("p",null,"An object for configuring how the"," ",l.a.createElement("a",{href:"https://github.com/pillarjs/path-to-regexp"},l.a.createElement(r.f,null,"path-to-regexp"))," ","handles the ",l.a.createElement(r.f,null,"path"),"."),l.a.createElement(r.d,null,'{\n  name: "My Route",\n  path: "my/:item",\n  pathOptions: {\n    match: {\n      sensitive: false\n    },\n    compile: {\n      encode: (value, token) => value\n    }\n  }\n}'),l.a.createElement(r.e,{tag:"h4",meta:{title:"match",hash:"pathOptions-match"}},l.a.createElement("p",null,"Properties for parsing the ",l.a.createElement(r.f,null,"path")," into a regular expression."),l.a.createElement("p",null,"You can see the options and their default values in the"," ",l.a.createElement("a",{href:"https://github.com/pillarjs/path-to-regexp#usage"},l.a.createElement(r.f,null,"path-to-regexp")," documentation"),"."),l.a.createElement(r.g,null,l.a.createElement("p",null,"If a route has a children array property, it will"," ",l.a.createElement("strong",null,"always")," have the ",l.a.createElement(r.f,null,"end")," path option set to"," ",l.a.createElement(r.f,null,"false"),"."))),l.a.createElement(r.e,{tag:"h4",meta:{title:"compile",hash:"pathOptions-compile"}},l.a.createElement("p",null,"For pathname generation, the options are passed through a"," ",l.a.createElement(r.f,null,"compile")," object. There is only one possible option, which is an ",l.a.createElement(r.f,null,"encode")," function for encoding params. The default"," ",l.a.createElement(r.f,null,"encode")," function encodes params using"," ",l.a.createElement(r.f,null,"encodeURIComponent"),"."))),l.a.createElement(r.e,{meta:{title:"extra",hash:"extra"},tag:"h3"},l.a.createElement("p",null,"If you have any additional properties that you want attached to a route, use the ",l.a.createElement(r.f,null,"extra")," property. You will be able to use"," ",l.a.createElement(r.f,null,"route.extra")," in any custom route interactions."),l.a.createElement(r.d,null,"const routes = prepareRoutes([\n  {\n    name: 'A Route',\n    path: 'a-route',\n    extra: {\n      transition: 'fade'\n    }\n  },\n  {\n    name: 'B Route',\n    path: 'b-route',\n    extra: {\n      enter: 'slide-right'\n    }\n  }\n]);")))},null))},O=[{title:"Installation",hash:"installation"},{title:"About",hash:"about"},{title:"API",hash:"API",children:[T,y,j,k,I,x]}];a.d(t,"sections",function(){return H}),a.d(t,"contents",function(){return O})}}]);