(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{90:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),l=n(3),o=n(20),c={title:"Arguments",hash:"curiProvider-arguments"},i={title:"curiProvider()",hash:"curiProvider",children:[c,{title:"Props",hash:"curiProvider-props"}]};function u(){return r.a.createElement(o.e,{meta:i},r.a.createElement("p",null,"The application needs a component at its root to re-render the application when new responses are emitted and to make routing related available through React's context. This component is created by passing the Curi ",r.a.createElement(o.f,null,"router")," to the ",r.a.createElement(o.f,null,"curiProvider()")," function."),r.a.createElement(o.g,null,r.a.createElement("p",null,"Why does ",r.a.createElement(o.f,null,"@curi/react-dom")," export a function to create a component and not just a component? Props signify values that can change, but an application should only ever have one router. By hard-coding the ",r.a.createElement(o.f,null,"router")," into a component, we avoid having to handle the possibility of switching routers (which should not happen).")),r.a.createElement(o.g,null,r.a.createElement("p",null,"All of the other components provided by ",r.a.createElement(o.f,null,"@curi/react-dom")," ","must be descendants of the component created by"," ",r.a.createElement(o.f,null,"curiProvider()"),".")),r.a.createElement(o.d,{lang:"jsx"},"import { curiProvider } from '@curi/react-dom';\n\nconst router = curi(history, routes);\nconst Router = curiProvider(router);\n\nfunction App() {\n  return (\n    <Router>\n      {({ response, navigation, router }) => {\n        const { body:Body } = response;\n        return <Body response={response} />;\n      }}\n    </Router>\n  );\n}"),r.a.createElement(o.e,{tag:"h3",meta:c},r.a.createElement(o.e,{tag:"h4",meta:{title:"router",hash:"curiProvider-router"}},r.a.createElement("p",null,"A Curi router."),r.a.createElement(o.d,null,'import { curiProvider } from "@curi/react-dom";\n\nconst router = curi(history, routes);\nconst Router = curiProvider(router);'))),r.a.createElement(o.e,{tag:"h3",meta:{title:"Props",hash:"curiProvider-props"}},r.a.createElement(o.e,{tag:"h4",meta:{title:"children",hash:"curiProvider-render"}},r.a.createElement("p",null,r.a.createElement(o.f,null,"children")," is a render-invoked function. When it is called, it will be passed an object with three properties:"),r.a.createElement(o.i,null,r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("th",null,"property"),r.a.createElement("th",null,"description"))),r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("td",null,"response"),r.a.createElement("td",null,"the response object generated for the current location")),r.a.createElement("tr",null,r.a.createElement("td",null,"navigation"),r.a.createElement("td",null,"the ",r.a.createElement(o.f,null,"action")," of the navigation and the"," ",r.a.createElement(o.f,null,"previous")," response object")),r.a.createElement("tr",null,r.a.createElement("td",null,"router"),r.a.createElement("td",null,"the Curi router")))))))}var s={title:"Props",hash:"Link-props"},m={title:"<Link>",hash:"Link",children:[s]};function h(){return r.a.createElement(o.e,{meta:m},r.a.createElement("p",null,"A ",r.a.createElement(o.c,null,"Link")," is for navigating within your application using an anchor element (",r.a.createElement(o.c,null,"a"),"). When the rendered element is clicked, instead of reloading the page it will use your router object's history object to navigate."),r.a.createElement("p",null,"With the ",r.a.createElement(o.c,null,"Link"),", instead of providing a URI to navigate to, you specify the name of the route that you want to link to. Then, the pathname of the URI you want the component to link to will be automatically generated for you."),r.a.createElement(o.d,{lang:"jsx"},"import { Link } from '@curi/react-dom';\n\n<Link name='User' params={{ id: 16 }}>User 16</Link>\n// <a href='/user/16'>User 16</a>"),r.a.createElement(o.e,{tag:"h3",meta:s},r.a.createElement(o.e,{tag:"h4",meta:{title:"name",hash:"Link-name"}},r.a.createElement("p",null,"The name of the route that you want to navigate to."),r.a.createElement("p",null,"If ",r.a.createElement(o.f,null,"name")," is not provided, the ",r.a.createElement(o.c,null,"Link")," will re-use the current location's ",r.a.createElement(o.f,null,"pathname"),". This is useful for linking to hashes within the current page."),r.a.createElement(o.d,{lang:"jsx"},'// Home route is { name: "Home", path: "" }\n<Link name="Home">Home</Link>'),r.a.createElement(o.g,null,r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"name")," prop is a replacement for the ",r.a.createElement(o.f,null,"to")," ","prop from previous versions. You can continue to use ",r.a.createElement(o.f,null,"to")," ","in ",r.a.createElement(o.f,null,"@curi/react-dom")," v1, but it will be removed in v2."))),r.a.createElement(o.e,{tag:"h4",meta:{title:"params",hash:"Link-params"}},r.a.createElement("p",null,"If the route that you want to navigate to (or any of its parents) include path parameters, you can specify them using the params prop."),r.a.createElement(o.d,{lang:"jsx"},"// User route is { name: 'User', path: '/user/:id' }\n<Link name='User' params={{ id: 16 }}>User 16</Link>")),r.a.createElement(o.e,{tag:"h4",meta:{title:"hash, query &amp; state",hash:"Link-hash-query-state"}},r.a.createElement("p",null,"While the pathname of the location to navigate to will be generated for you, this does not cover over location properties (query, hash, and state). The ",r.a.createElement(o.f,null,"query"),", ",r.a.createElement(o.f,null,"hash"),", and"," ",r.a.createElement(o.f,null,"state")," props are used to pass these values."),r.a.createElement(o.d,{lang:"jsx"},'<Link\n  name=\'Products\'\n  params={{ type: \'vacuums\' }}\n  hash="iroomba"\n  query="volume=loud"\n  state={{ owner: "Tom Haverford" }}\n>\n  DJ Roomba\n</Link>\n\n// <a href="products/vacuums?volume=loud#iroomba">\n//  DJ Roomba\n// </a>')),r.a.createElement(o.e,{tag:"h4",meta:{title:"children",hash:"Link-children"}},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"children")," prop can take two forms: either a valid React Node (e.g. a React element, a string, or ",r.a.createElement(o.f,null,"null"),") or a render-invoked ",r.a.createElement(o.f,null,"children")," function."),r.a.createElement("p",null,"The render-invoked ",r.a.createElement(o.f,null,"children")," function will be called with the ",r.a.createElement(o.c,null,"Link"),"'s navigation state. The navigation state is"," ",r.a.createElement(o.f,null,"false")," to start, ",r.a.createElement(o.f,null,"true")," when the ",r.a.createElement(o.c,null,"Link")," ","is clicked, and ",r.a.createElement(o.f,null,"false")," when the the navigation finishes/is cancelled."),r.a.createElement(o.d,{lang:"jsx"},'// a React node\n<Link name="Home">\n  Home\n</Link>\n\n// a render-invoked function\n<Link name="User" params={{ id: 1 }}>\n  {navigating => (\n    <React.Fragment>\n      User 1\n      {navigating ? <Spinner /> : null}\n    </React.Fragment>\n  )}\n</Link>')),r.a.createElement(o.e,{tag:"h4",meta:{title:"anchor",hash:"Link-anchor"}},r.a.createElement("p",null,"By default, when you render a ",r.a.createElement(o.c,null,"Link"),", an anchor element will be rendered. ",r.a.createElement(o.f,null,"anchor")," lets you provide your own component to be rendered instead. This can be useful for using styled components to navigate."),r.a.createElement(o.j,null,r.a.createElement("p",null,"You can provide any component that you want, but you"," ",r.a.createElement("em",null,"should")," stick with an anchor (or a component that renders an anchor). There are accessibility issues that will occur when you use other DOM elements as links. The component's prop type is func in an attempt to discourage you from making your link render a button, div, span, etc."))),r.a.createElement(o.e,{tag:"h4",meta:{title:"forward",hash:"Link-forward"}},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"forward")," prop is an object of props to pass on to the rendered anchor component."),r.a.createElement(o.d,{lang:"jsx"},'<Link\n  name="Home"\n  forward={{\n    className: "home"\n  }}\n>Home</Link>\n// <a href="/" class="home">Home</a>'),r.a.createElement(o.g,null,r.a.createElement("p",null,"Previously, any extra props passed to a ",r.a.createElement(o.c,null,"Link")," would be forwarded to the anchor component. This behavior is now deprecated and will be removed in ",r.a.createElement(o.f,null,"@curi/react-native")," v2. Please use the ",r.a.createElement(o.f,null,"forward")," prop instead.")))))}var p={title:"Props",hash:"Focus-props"},d={title:"<Focus>",hash:"Focus",children:[p]};function f(){return r.a.createElement(o.e,{meta:d},r.a.createElement("p",null,r.a.createElement(o.c,null,"Focus")," lets you focus a DOM element whenever there is a new response."),r.a.createElement("p",null,'The DOM component that gets the ref should either already be "focusable", like an ',r.a.createElement(o.c,null,"input"),", or be given a ",r.a.createElement(o.f,null,"tabIndex")," ","prop (usually with the value of ",r.a.createElement(o.f,null,"-1"),"). If neither of these conditions is met, then the document's"," ",r.a.createElement(o.c,null,"body")," will be focused."),r.a.createElement("p",null,"The focused element will have an outline (the exact style varies by browser). You can remove this visual with a CSS ",r.a.createElement(o.f,null,"outline")," of"," ",r.a.createElement(o.f,null,'"none"'),"."),r.a.createElement(o.g,null,r.a.createElement("p",null,"Only one ",r.a.createElement(o.c,null,"Focus")," should be rendered at a time.")),r.a.createElement(o.d,{lang:"jsx"},'import { Focus } from "@curi/react-dom";\n\n<Focus>\n  {ref => (\n    <div tabIndex={-1} ref={ref}>\n      {/* ... */}\n    </div>\n  )}\n</Focus>'),r.a.createElement(o.e,{tag:"h3",meta:p},r.a.createElement(o.e,{tag:"h4",meta:{title:"children()",hash:"Focus-children"}},r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"children()")," function is a render-invoked prop that will be passed a ",r.a.createElement(o.f,null,"ref"),". The ",r.a.createElement(o.f,null,"ref")," should be attached to the element that you want focused."),r.a.createElement("p",null,"If you need to pass this through class/functional components, you should use either ",r.a.createElement(o.f,null,"React.forwardRef()")," or pass it as a prop with a name other than ",r.a.createElement(o.f,null,"ref")," (like ",r.a.createElement(o.f,null,"innerRef"),")."),r.a.createElement(o.d,{lang:"jsx"},"<Focus>\n  {ref => (\n    <div tabIndex={-1} ref={ref} />\n  )}\n</Focus>\n\n<Focus>\n  {ref => <SomeComponent innerRef={ref} />}\n</Focus>")),r.a.createElement(o.e,{tag:"h4",meta:{title:"preventScroll",hash:"focus-preventScroll"}},r.a.createElement("p",null,"The default behavior for focusing an element is to scroll to it. If you want to prevent this, pass ",r.a.createElement(o.f,null,"preventScroll={true}")," ","to the ",r.a.createElement(o.c,null,"Focus"),"."),r.a.createElement(o.d,{lang:"jsx"},"// scrolls\n<Focus>{ref => ...}</Focus>\n\n// does not scroll\n<Focus preventScroll={true}>{ref => ...}</Focus>")),r.a.createElement(o.e,{tag:"h4",meta:{title:"preserve",hash:"focus-preserve"}},r.a.createElement("p",null,"The default focus behavior is to always focus the element that the ref is attached to. However, if you want to preserve the focus on some other element (e.g. an autofocused element),"," ",r.a.createElement(o.f,null,"preserve={true}")," will stop the ",r.a.createElement(o.f,null,"ref")," ","element from claiming the focus."),r.a.createElement("p",null,"This only works when the already-focused element is a child of the"," ",r.a.createElement(o.f,null,"ref")," element. If it is not a child, then the"," ",r.a.createElement(o.f,null,"ref")," element will take the focus."),r.a.createElement(o.d,{lang:"jsx"},"// claim focus for the <div>\n<Focus>\n  {ref => (\n    <div tabIndex={-1} ref={ref}>\n      <input autoFocus={true} />\n    </div>\n  )}\n</Focus>\n\n// preserve focus on the <input>\n<Focus preserve={true}>\n  {ref => (\n    <div tabIndex={-1} ref={ref}>\n      <input autoFocus={true} />\n    </div>\n  )}\n</Focus>"))))}var E={title:"Props",hash:"Curious-props"},v={title:"<Curious>",hash:"Curious",children:[E]};function g(){return r.a.createElement(o.e,{meta:v},r.a.createElement("p",null,"A context consumer component for injecting router values into components."),r.a.createElement(o.d,{lang:"jsx"},"import { Curious } from '@curi/react-dom';\n\nfunction MyComponent() {\n  return (\n    <Curious>\n      {({ router, response, navigation }) => {\n        // pass these props to any components\n        // that needs them\n        return (\n          <ThingThatNeedsResponse\n            response={response}\n          />\n        );\n      }}\n    </Curious>\n  );\n}"),r.a.createElement(o.e,{tag:"h3",meta:E},r.a.createElement(o.e,{tag:"h4",meta:{title:"children",hash:"Curious-children"}},r.a.createElement("p",null,"A render-invoked function that returns a React element. This function will receive an object with ",r.a.createElement(o.f,null,"router"),","," ",r.a.createElement(o.f,null,"response")," and ",r.a.createElement(o.f,null,"navigation")," properties."))))}var w={title:"Props",hash:"Active-props"},b={title:"<Active>",hash:"Active",children:[w]};function y(){return r.a.createElement(o.e,{meta:b},r.a.createElement("p",null,"The ",r.a.createElement(o.c,null,"Active"),' component is used to render based on whether or not a route is "active" (its name and params match the current response\'s name and params) using a render-invoked ',r.a.createElement(o.f,null,"children")," ","function."),r.a.createElement(o.d,{lang:"jsx"},'import { Active } from \'@curi/react-dom\';\n\nfunction ActiveLink({\n  name,\n  params,\n  partial,\n  forward,\n  ...rest\n}) {\n  return (\n    <Active name={name} params={params} partial={partial}>\n      {active => (\n        <Link\n          name={name}\n          params={params}\n          {...rest}\n          forward={{\n            ...forward,\n            className: [forward.className || "", active ? "active" : ""].join(" ")\n          }}\n        >\n          {children}\n        </Link>\n      )}\n    </Active>\n  );\n}\n\n<ActiveLink name="Home">Home</ActiveLink>'),r.a.createElement(o.g,null,r.a.createElement("p",null,"This relies on the active route interaction from"," ",r.a.createElement(l.b,{name:"Package",params:{package:"route-active",version:"v1"}},"@curi/route-active")," ","being added to your router."),r.a.createElement(o.d,null,"import active from '@curi/route-active';\n\nconst router = curi(history, routes, {\n  route: [active()]\n});")),r.a.createElement(o.e,{tag:"h3",meta:w},r.a.createElement(o.e,{tag:"h4",meta:{title:"name",hash:"Active-name"}},r.a.createElement("p",null,"The name of the route to compare against the response object.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"params",hash:"Active-params"}},r.a.createElement("p",null,"An object containing route parameters. These will be compared against the route params of the response object.")),r.a.createElement(o.e,{tag:"h4",meta:{title:"children",hash:"Active-children"}},r.a.createElement("p",null,"A render-invoked function whose first argument is whether the route (determined using the ",r.a.createElement(o.f,null,"name")," and ",r.a.createElement(o.f,null,"params"),") is active."),r.a.createElement(o.d,{lang:"jsx"},'// response = { name: "Photo", params: { id: "abcde" }}\n\n<Active name="Photo" params={{ id: "abcde" }}>\n  {active => ( // if active === true\n    <Photo className={active ? "active" : "inactive"} />\n  )}\n</Active>\n// <Photo className="active" />\n\n<Active name="Photo" params={{ id: "qwerty" }}>\n  {active => ( // if active === false\n    <Photo className={active ? "active" : "inactive"} />\n  )}\n</Active>\n// <Photo className="inactive" />'),r.a.createElement("p",null,"The second argument passed to the render-invoked function is the current ",r.a.createElement(o.f,null,"response"),". ",r.a.createElement(o.c,null,"Active")," only checks if the route is active (i.e. matches the current location's"," ",r.a.createElement(o.f,null,"pathname"),"). If you want to check if a ",r.a.createElement(o.f,null,"query")," or"," ",r.a.createElement(o.f,null,"hash")," match the current location, you should do this yourself inside of the render-invoked function. You can compare the"," ",r.a.createElement(o.f,null,"query"),"/",r.a.createElement(o.f,null,"hash")," against the response's"," ",r.a.createElement(o.f,null,"location"),"."),r.a.createElement(o.d,{lang:"jsx"},'<Active name="Home">\n  {(active, response) => {\n    const activeHash = response.hash === "ahoy"\n    // ...\n  }}\n</Active>')),r.a.createElement(o.e,{tag:"h4",meta:{title:"partial",hash:"Active-partial"}},r.a.createElement("p",null,"When ",r.a.createElement(o.f,null,"true"),", ",r.a.createElement(o.f,null,"partial")," allows ancestor routes to be considered active. Defaults to ",r.a.createElement(o.f,null,"false"),"."),r.a.createElement(o.d,{lang:"jsx"},'// response = { name: "Photo", params: { id: "abcde" }}\n// where "Photo" is a child route of "Album"\n\n<Active name="Album">\n  {active => ( // if active === false\n    <Album className={active ? "active" : "inactive"} />\n  )}\n</Active>\n// <Album className="inactive" />\n\n<Active name="Album" partial={true}>\n  {active => ( // if active === true\n    <Album className={active ? "active" : "inactive"} />\n  )}\n</Active>\n// <Album className="active" />'))))}var k={title:"Props",hash:"Navigating-props"},A={title:"<Navigating>",hash:"Navigating",children:[k]};function P(){return r.a.createElement(o.e,{meta:A},r.a.createElement("p",null,"The ",r.a.createElement(o.c,null,"Navigating")," component lets you know when the application is navigating and let users cancel the navigation. Its"," ",r.a.createElement(o.f,null,"children")," prop is a render-invoked function that is passed a function to cancel the navigation."),r.a.createElement("p",null,"When navigation starts, ",r.a.createElement(o.f,null,"children()")," will be called with a function that will cancel navigation when it is called."),r.a.createElement("p",null,"When navigation finishes, ",r.a.createElement(o.f,null,"children()")," will be called with no arguments."),r.a.createElement(o.d,{lang:"jsx"},'import { Navigating } from "@curi/react-dom";\n              \n<Navigating>\n  {cancel => {\n    if (cancel === undefined) {\n      return null;\n    }\n    return (\n      <button onClick={cancel}>\n        Cancel Navigation\n      </button>\n    );\n  }}\n</Navigating>'),r.a.createElement(o.e,{tag:"h3",meta:k},r.a.createElement(o.e,{tag:"h4",meta:{title:"children()",hash:"Navigating-children"}},r.a.createElement("p",null,"A function that returns a React node. The function will be called with a ",r.a.createElement(o.f,null,"cancel")," function when navigation starts and with no arguments when the navigation is finished."),r.a.createElement("p",null,"Calling the ",r.a.createElement(o.f,null,"cancel")," function after the navigation is finished has no effect."))))}var j={title:"Props",hash:"Block-props"},T={title:"<Block>",hash:"Block",children:[j]};function L(){return r.a.createElement(o.e,{meta:T},r.a.createElement("p",null,"The ",r.a.createElement(o.c,null,"Block")," component lets you prevent navigation until a user has confirmed that they want to navigate. This can be useful when the user attempts to navigate away from a partially filled form. This"," ",r.a.createElement("strong",null,"will not")," prevent the user from navigating to another site, it only works for navigation within the application."),r.a.createElement(o.d,{lang:"jsx"},"import { Block } from '@curi/react-dom';"),r.a.createElement(o.e,{tag:"h3",meta:j},r.a.createElement(o.e,{tag:"h4",meta:{title:"active",hash:"Block-active"}},r.a.createElement("p",null,"A boolean, which is true by default. When it is true, the navigation block is active. When it is false, navigation will not be blocked."),r.a.createElement(o.d,{lang:"jsx"},"// will block navigation\n<Block active={true} confirm={confirm} />\n\n// will not block navigation\n<Block active={false} confirm={confirm} />")),r.a.createElement(o.e,{tag:"h4",meta:{title:"confirm",hash:"Block-confirm"}},r.a.createElement("p",null,"The confirm prop is a function that will be called whenever there is navigation."),r.a.createElement(o.i,null,r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("th",null,"argument"),r.a.createElement("th",null,"description"))),r.a.createElement("tbody",null,r.a.createElement("tr",null,r.a.createElement("td",null,"location"),r.a.createElement("td",null,"the location that is being navigated to")),r.a.createElement("tr",null,r.a.createElement("td",null,"action"),r.a.createElement("td",null,"the type of navigation")),r.a.createElement("tr",null,r.a.createElement("td",null,"success"),r.a.createElement("td",null,"a function to call when navigation should happen")),r.a.createElement("tr",null,r.a.createElement("td",null,"failure"),r.a.createElement("td",null,"a function to call when navigation should be cancelled.")))),r.a.createElement(o.d,{lang:"jsx"},'<Block\n  confirm={({ location, action }, success, failure) => {\n    const response = window.confirm("Shall we?");\n    if (response) {\n      success();\n    } else {\n      failure();\n    }\n  }}\n/>'))))}function x(e){return(x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function F(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function R(e,t){return!t||"object"!==x(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function N(e){return(N=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function C(e,t){return(C=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var I=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),R(this,N(t).apply(this,arguments))}var n,a,c;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&C(e,t)}(t,r.a.PureComponent),n=t,(a=[{key:"render",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(o.b,null,r.a.createElement("p",null,"The ",r.a.createElement(o.f,null,"@curi/react-dom")," package provides a number of React components that you can use for rendering your application."),r.a.createElement("p",null,"For more information on using Curi with React DOM, please check out the"," ",r.a.createElement(l.b,{name:"Guide",params:{slug:"react-dom"}},"React DOM guide"),".")),r.a.createElement(o.a,null,r.a.createElement(u,null),r.a.createElement(h,null),r.a.createElement(f,null),r.a.createElement(g,null),r.a.createElement(y,null),r.a.createElement(P,null),r.a.createElement(L,null)))}}])&&F(n.prototype,a),c&&F(n,c),t}(),O=[{title:"Installation",hash:"installation"},{title:"About",hash:"about"},{title:"API",hash:"API",children:[i,m,d,v,b,A,T]}];n.d(t,"component",function(){return I}),n.d(t,"contents",function(){return O})}}]);